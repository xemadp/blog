<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

<channel>
  <title>Emad's Blog</title>
  <link>https://xemadp.github.io/blog/</link>
  <description>Latest blog posts from Emad</description>
<item>
	<title> Always Remember, Empires Never Last</title>
	<link>https://xemadp.github.io/blog/entries/empiresneverlast.html</link>
	<pubDate>Mon, 27 Oct 2025 01:55:39 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-10-27 01:55:39 --->


<h1>Always Remember, Empires Never Last</h1>

<p><img src="https://xemadp.github.io/blog/pics/galahad.jpg" alt="Empires Never Last , Galahad"  style="width:100%;height:auto;max-width:800px" /></p>

<p>(This was supposed to be finished on October 12, 2025)</p>

<p>For the last two weeks, students in KNTU ( My uni ) primarily consisting of dormitory residents in
Danesh 1 &amp; Danesh 2 Dormitories, have been protesting once every night.</p>

<p>Their main concern? Criticizing The absolute mess KNTU is in right now.</p>

<h2>Logistical Mess</h2>

<p>For those of you don&rsquo;t know the university is not centralized in a specific place,
it is actually spread across different regions of Tehran. While most ( not all ) of dormitories are
centralized close to only one or two faculties.</p>

<p>This of course, makes the subject of transportation across faculties a very much important problem.
Logically one would suppose a university with this sort of logistical background, would accommodate students
fully, giving them access to day-round buses around the city, catered for the specific routes
on which the faculties fall on.</p>

<p>Well, As it so happens the main concern and on of the points of
arguments were Transportation.</p>

<p>Two of the main timeslots where students needed busses the most
were taken out, and hence people cared much about this issue.</p>

<h2>MM.. Food</h2>

<p>Food Sucks.</p>

<p>One would not think the food in a so called scientific establishment
could suck more than a low grade military barracks.</p>

<p>To add a top that, it is now more expensive than EVER! yippie.</p>

<p>of course people are not gonna <strong><em>buy</em></strong> that.</p>

<h2>Night of the dead</h2>

<p><img src="https://xemadp.github.io/blog/pics/gatheraroundchildren.jpg" alt="gather around, children"  style="width:100%;height:auto;max-width:550px" /></p>

<p>Some Officials from the central office along with some from the
Ministry of Science make their way to dormitory yard.</p>

<p>The students gather them, chanting , some trying to guerrila-talk their way into showing their concerns and demands.</p>

<p>They suggest a sit down in the mosque , where they can hear the students better by them taking turn in talking.</p>

<p>Everyone knows fully by now, that granting them this, would officially mean granting them a position of high-to-low stance where they pick and choose what they want to hear and what and who to answer to.</p>

<p>Having said this the people just keep chanting, the officials move to the main faculty mosque, people outside still chanting.</p>

<p>Someone finally peeks into the mosque, what could the officials be doing that would be better than listening to the peoples demands?</p>

<ul>
<li>praying&hellip;.</li>
</ul>


<p>Yep, that&rsquo;s about the state of affairs here.</p>

<h2>They Always Crumble and Fall</h2>

<p>Off we Go!</p>

<p>I see Earth! It is so beautiful!</p>

<p>That night and all these nights, had one major result.</p>

<p>The two time slots most important to uni students , were put back in place.</p>

<p>Many issues remain untouched and untended.</p>

<p>But the greatest thing to notice :</p>

<p><strong><em>It works when people gather. *They truly don&rsquo;t have enough bullets</em></strong>*</p>
]]></description>
</item>
<item>
	<title> Ever ponder about the vibe music gives to chapters of your life?</title>
	<link>https://xemadp.github.io/blog/entries/vibes.html</link>
	<pubDate>Thu, 12 Jun 2025 06:46:50 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-06-12 06:46:50 --->


<h1>Ever ponder about the vibe music gives to chapters of your life?</h1>

<p>For me it seemed crazy how some people would be able to cite the date out of nowhere when
talking about certain events. Specially when I had just turned eighteen and put myself out there in
new friend groups.</p>

<p>It only ever became clear to me two years after that,when suddenly and seemingly out of nowhere
I started remembering the date ( like saying fall of 2022 for example ).</p>

<p>I feel like a connection to certain eras of our lifetime ( like a season of the year ) is generally
the collection of feelings, thoughts, ambitions and memories that <em>Remain</em> Attached to them sometime after experiencing them. Almost like how when we really remember something from yesterday or last week, we really are remembering the last time we remembered it, which traces back directly to when we experienced it. Or more evidently when we try to remember dreams, We really are remembering our last remembrance of it. Notice how one never really remembers dreams they don&rsquo;t think about right after they wake up, since dreams mainly exist in our short time memory slots.</p>

<p>In a broader sense I think the collective nostalgia/feeling we have towards certain chopped up seasons of life are just like this, differing in the fact that that feeling is refined through days of uncounscious brain activity with a spice of emotional convergence.</p>

<p>For me something that will always be a direct reminder of a certain era ( Parallel to smelling sth for most people ) is hearing the music that I used to listen to in that era. If I close my eyes for a moment, it can almost grab me and put me in a slice of that time from that era.</p>

<p>Lately I&rsquo;ve been listening to more music on shuffle in my playlist and man it feels like I enter a time machine with a one-way view when I put my headphones on.
Its towards the end of spring 2025 when I am writing this,
through last week or so, Miraculous ordering of songs are showing up in my shuffle queues,
at least one song that defines the spring of last year for me.
Since I am greedy in giving meta-physical reasons to my thoughts,
<strong>I feel like the only reason for this should be the amount of effect the weather has in Pseudo-Random-Number-Generators used in the shuffle algorithms</strong>,
Probably not though.</p>

<p>Anyways this has been a mind dump on how music can really define and remind us of certain
times, really bring out that nostalgia, create vivid images of those times for us.</p>

<p>Thanks for reading.</p>
]]></description>
</item>
<item>
	<title> The sky is filled with herds of shivering angels</title>
	<link>https://xemadp.github.io/blog/entries/joancrawford.html</link>
	<pubDate>Wed, 05 Mar 2025 12:51:26 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-03-05 12:51:26 --->


<h1>The sky is filled with herds of shivering angels</h1>

<p>Blue Oyster Cult is just one of those classic rock bands who make music that one simply cannot deny
the impact and strange-ness of.</p>

<p>I came to know BOC 3 or so years ago with the song <em>I Love The Night</em>. In a gloomy autumn night it was
when I heard this song, many people resembling friends around me, not that any of them were not sincere, it
was just that I felt alone, and I had the right to, since no meaningful friendship was established.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/boc1.jpg" alt="Fire Of Unknown Origin"  style="width:100%;height:auto;max-width:600px" />
<br>
<br>
Fire of Unknown Origin Album Art
</p></p>

<p>Tavern night with strangers vibe.</p>

<p>Anyways;I hold Blue Oyster Cult as dear to me as almost the band Camel.</p>

<p>I have never been any good at giving convincing concise recommendations on music.
You just gotta listen to it.</p>

<p>Here are some of the songs I started out with :</p>

<ul>
<li>I Love The Night, Spectres Album</li>
<li>Astronomy*, Secret Treaties Album</li>
<li>Flaming Telepaths**, Secret Treaties Album</li>
<li>Joan Crawford, Fire of Unknown Origin Album</li>
<li>(Don&rsquo;t Fear) The Reaper, Agents of Fortune Album</li>
<li>The Vigil, Mirrors Album</li>
<li>Then Came the Last Days of May, Blue Oyster Cult Album</li>
</ul>


<p>In no particular order.</p>

<p><strong>*I highly recommend Astronomy cover by Metallica</strong></p>

<p><strong>** I highly recommend Flaming Telepaths cover by Witchwood</strong></p>

<p><strong>Anyways here is the lyrics to one I was just listening to (Joan Crawford):</strong></p>

<p>Junkies down in Brooklyn are going crazy</p>

<p>They&rsquo;re laughing, just like <a href="https://t.me/musicmakesmelosecontrol/1298">hungry dogs</a> in the street</p>

<p>Policemen are hidin' behind the skirts of little girls</p>

<p>Their eyes have turned the color of frozen meat</p>

<p>No, no, no, no, no, no, no, no, no, no, no, no</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Catholic school girls have thrown away their mascara</p>

<p>They chain themselves to the axles of Big Mack trucks</p>

<p>The sky is filled with herds of shivering angels</p>

<p>The fat lady laughs, &ldquo;Gentlemen, start your trucks&rdquo;</p>

<p>No, no, no, no, no, no, no, no, no, no, no, no</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>no, no</p>

<p>(Christina) no, no, no, no, no</p>

<p>(Come to mother) no, no, no, no, no, no, no, no, no, no&hellip;</p>

<p>(Christina)</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen from the grave</p>

<p>Joan Crawford has risen</p>
]]></description>
</item>
<item>
	<title> Group Theory and Chess</title>
	<link>https://xemadp.github.io/blog/entries/grouptheoryI.html</link>
	<pubDate>Mon, 03 Mar 2025 16:35:48 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-03-03 16:35:48 --->


<h1>Group Theory and Chess</h1>

<p>I have been spending some time playing chess with my <em>dearest friend</em> lately.
I have never been a chess player ever since I was a kid; Always found it hard to pursue since
There were always a lot of people that were pretty good at it.
And it was always kinda not worth for me to pick up, even though I enjoyed it.
Last night after a tough defeat, I started thinking, I remember as a 10th grader, I used to be
nuts about combinatorics and the combinatorial questions and puzzles that I encountered
that where about chess pieces and their movements on a grid. I really liked those
questions and I wondered If there can be found an Algebraic Structure in the movement
of chess pieces so I started abstractify.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/chess.jpg" alt="Chess!"  style="width:100%;height:auto;max-width:800px" />
</p></p>

<p>I started out with my favourite piece, The Knight™.</p>

<p>Looking at the knight movement, assuming that a square
that it wants to move to is not occupied and all 8 squares that a knight can reach are there, we can define the set
of movements.</p>

<p>We know that a knight can either :
- Move one square in some direction (U, D) or (+1, -1) and then move two squares in a direction (+2 or -2),
- Move two square in some direction (L, R) or (+2, -2) and then move one square in a set direction(+1 or -1).</p>

<p>Let an element in this set be compromised of two parts as such : (p,q)
Where p shows us the first part of the move and q shows us the second.</p>

<p>We would then have 4 + 4 elements, that is 8 elements in total :</p>

<p align="center" style="line-height:1.5">
{(+2, +1),(+2, -1),(-2, +1),(-2, -1),(+1, +2),(+1, -2),(-1, +2),(-1, -2)}
</p>


<p>Now we can look for binary functions to use on this set and find some algebraic properties hopefully.
One immediate function that comes to mind the addition of the coordinates, Like (-1, -2) + (+2, -1) = (+1, -3)
So (+1, -3) is the square we land on if we start from the square with coords (-1, -2) and move (+2, -1).</p>

<p>If the chess board is infinite, turns our that this is function along with our set, describes a generator for
(Z<sup>2</sup>, +), meaning we can traverse to all squares on an infinite chess board, and hence the group generated will be
isomporphic to the integer lattice under vector addition.</p>

<p>Another fun composition could be looking at the parity of the moves that a knight makes.</p>

<p>f(x,y) = x + y mod 2</p>

<p>Well then, the parity of the coords change each time the knight moves, this seperates the board into two parts,
and hence is a good combinatorial/algebraic way to understand how a knight-tour is possible/impossible on certain boards.
Because what we are doing is basically treating the chess board as a bipartite graph and each time moving from an odd square to and even one or vice versa.</p>

<p>That&rsquo;s it for today I guess.</p>
]]></description>
</item>
<item>
	<title> So you think you can tell Heaven from Hell</title>
	<link>https://xemadp.github.io/blog/entries/compilerIV.html</link>
	<pubDate>Sun, 16 Feb 2025 18:23:39 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-02-16 18:23:39 --->


<h1>So you think you can tell Heaven from Hell</h1>

<hr>


<p> Let&rsquo;s create a parser for noam, for now we will use tools that create parsers for us, maybe later we&rsquo;ll focus on implementing one from scratch, however
 our aim for now is to understand how compilers work, and creating one that works. We&rsquo;ll modify our lexer which is basically a lisp thunk that is modified from <a href="https://xemadp.github.io/blog/entries/compilerIII.html">before</a> to return TOKEN and value of a lexeme when used by the parser that we&rsquo;re going to make.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/reddragon.png" alt="Complexity Of Compiler Design Doesn't stand a chance!"  style="width:100%;height:auto;max-width:500px" />
</p></p>

<p>In the lexical analysis phase, we used the power of DFAs ( Regular Expressions or Regular Grammars) to check if our input file,
is indeed made up of words that are recognized in our language as valid. Take English for example, if we are given the input stream
<code>Here Is An English Sente&amp;#%nc@e</code>, we are able to recognize that <code>Here</code>, <code>Is</code>, <code>An</code> and <code>English</code> are all
valid English words, but <code>Sente&amp;#%nc@e</code> is not. Regular Expressions let us do this, but they fall short when it comes to
finding out whether a given sentence is <em>grammatically</em> correct or not,
let&rsquo;s say we have <code>Another in English Sentence Here is</code> as input,
RegExp will tell us that this sentence is made up of valid English words
But it can&rsquo;t really tell if it has valid English grammatical structure.
This is also called Syntactical Analysis.</p>

<p>Here is where the need to use context free grammars becomes apparent.
The same principle is present in Compiler Design. We want to make sure
the input program is syntactically correct.</p>

<p>We will use cl-yacc to create the parser and print out how the input program is derived from the grammar.</p>

<hr>


<h1>Language Specification and Context Free Grammars</h1>

<p>Language Specification is basically an instruction set that shows us how different sentential forms can be derived in our language.
A sentential form is basically a configuration of some sentence in our language before or after it is derived.
for example if our grammar is like this :</p>

<p><pre><code>expression -&gt; expression + expression
expression -&gt; 2
</code></pre>
then <code>expression + 2</code>, <code>2+2</code>, <code>expression + expression</code>, <code>2 + expression</code> would all be sentential forms.
a sentential form that can derive nothing, is called a sentence.</p>

<p><code>2+2</code> is a sentence in this example.</p>

<p>The Specification of most programming languages are in backaus-naur-form(BNF) which is just another way of representing Context Free Grammars.
here how the noam specification looks like in extended bnf ( ebnf ) for now:</p>

<p><pre><code>program = { automaton_declaration | verification_declaration };

automaton_declaration = "Automaton" identifier "{"
state_declaration
start_state
accept_states
alphabet_declaration 
transition_declaration

"}";

state_declaration = "states" "{" {state, ","} state "}", ";";
start_state = "start" state, ";";
accept_states = "accept" "{" { state, "," } state "}", ";";
state = identifier;

alphabet_declaration = "inputset" "{" {string, ","}, string "}", ";";

transition_declaration = dfa_transition;
dfa_transition = "transition" state, ":" { transition_rule }

transition_rule = "on" string,"," "goto" state, ";";

verification_declaration = "Verify" identifier "{"
property_list
"}";

property_list = { property, ";"};
property = reachable | acceptance | determinism | emptiness | equivalence;
reachable = "canreach" "{" { state, "," } state  "}";
acceptance = "accepts"  "{" { string,"," } string "}";
determinism = "deterministic";
emptiness = "isempty";
equivalence = "equal" "{" { identifier,"," } identifier "}" ;
termination = "terminates" "{" { string, "," } string "}";

identifier = letter , { letter | digit | "_" } ;

letter =  "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z";

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "&lt;" | "&gt;"
       | "'" | '"' | "=" | "|" | "." | "," | ";" | "-" 
       | "+" | "*" | "?" | "\n" | "\t" | "\r" | "\f" | "\b" ;

string = { character };
character = letter | digit | symbol | "_" | " " ;
</code></pre>
</p>

<h2>Context Free Grammars</h2>

<p>Let&rsquo;s formally define CFGs.
Let&rsquo;s say <em>G</em> is a context free language. Then G is a 4-tuple (V,T,P,S)
where</p>

<ul>
<li><em>V</em> is a finite set called the <em>variables</em> or <em>Nonterminals</em>,</li>
<li><em>T</em> is a finite set, disjoin from <em>V</em>, called the <em>terminals</em>,</li>
<li><em>P</em> is a finite set of <em>production rules</em>, with each rule being a variable and a string of variables and terminals, and</li>
<li><em>S</em> is the start variable.</li>
</ul>


<p>We start with the start variable S,
Each time a <em>nonterminal</em> is chosen and the production rule that has this nonterminal as it&rsquo;s left
hand ( head ) is used to derive other sentential forms.</p>

<p>Terminals can never be the head of some production meaning they cannot derive anything.
A sentence is composed of only terminals.</p>

<p>The Start Variable of the noam specification would be the <code>program</code> variable and the
production of which <code>program</code> is the head, would be <code>program -&gt; automaton_declaration | verification_declaration</code>
we want to some how analyze our input file and find out which of these production rules are used to derive that sentence.</p>

<p>Utilizing the power of Context Free Grammars, we can find a lot about the structure of a given input stream, given the grammar
specification.</p>

<hr>


<h1>What is a Parser</h1>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/lex2parse.png" alt=""  style="width:100%;height:auto;max-width:350px" />
</p></p>

<p>A parser is a program, that takes tokens from lexer, and tries to make sense of them syntactically
while looking at a pre-defined grammar ( tries to create syntax trees ).
A parser is effectively a really big state machine that decides
what part of the input ( sentential form ), corresponds to what part
of the grammar productions.
There are different type of parsers, Top-Down parsers, Bottom-up Parsers and more.
For the sake of this blog post, we&rsquo;ll talk about bottom-up parsing since
that is the method mostly used to create parsers for programming languages.
Most parser generators also use bottom-up parsing techniques to create parsers.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/parserwiz.png" alt="Syntactical Analysis"  style="width:100%;height:auto;max-width:370px" />
<br>
<br>
Wizard as Parser, Creating A parse tree for <code>Ex Arboribus Cognitio</code>
<br>
From Trees, Knowledge
</p></p>

<h2>Bottom Up Parsing</h2>

<p>A bottom-up parser, tries to start from the sentence given as input and
build it&rsquo;s way up to the start variable, by doing two things :</p>

<p>It Either:</p>

<ul>
<li>Shifts ( Consumes ) input into a stack or,</li>
<li>Reduces ( replaces some of the top contents of the stack ) with a production head, defined in the grammar.</li>
</ul>


<p>It is basically a really big state machine that decides whether to shift/reduce when given a token.</p>

<p>The class of Context Free Languages that can be parsed by bottom-up parsers are called LR(k) languages.
It stands for Left-to-Right Rightmost derivation in reverse, and k is the number of character lookaheads that is allowed.</p>

<p>In some cases some conflicts can happen ( when the parser doesn&rsquo;t know if it should shift or reduce )
We can get by easily by looking at a special type of languages that parsed with LALR(1) parsers.</p>

<p>For the most part, conflicts can be avoided in the parsing table designed for these languages.</p>

<p>That may be the reason why most parser generators like yacc/bison create LALR(1) parsers.</p>

<hr> 


<h1>Creating a parser for noam</h1>

<p>In this post, we&rsquo;ll create a parser for noam that effectively parses the noam input file and prints the reductions performed by the parser in order of them taking effect.</p>

<p>Let&rsquo;s first Modify the lexer we had from earlier to return a VALUE and lexeme when finding a token.</p>

<p>lexer.lisp:</p>

<p><pre><code>(ql:quickload '(:cl-lex))

(defpackage :noam-lexer
  (:use :cl :cl-lex)
  (:export 
    #:noam-lexer
   :AUTOMATON_KW :STATES_KW :START_KW :ACCEPT_KW :VERIFY_KW 
   :INPUTSET_KW :TRANSITION_KW :ON_KW :GOTO_KW :CANREACH_KW 
   :ACCEPTS_KW :DETERMINISTIC_KW :ISEMPTY_KW :EQUAL_KW :TERMINATES_KW 
   :SEMICOLON :LBRACE :RBRACE :COMMA :COLON 
   :IDENTIFIER :STRING))
    

(in-package :noam-lexer)

;;Noam-lexer
(define-string-lexer noam-lexer
  
  ;; Ignore \t and newlines.
  ("[\\t\\n]+" nil)  
  
  
  ;; Reserved keywords.
  ("accepts"           (return (values 'ACCEPTS_KW $@)))
  ("Automaton"         (return (values 'AUTOMATON_KW $@)))
  ("states"            (return (values 'STATES_KW $@)))
  ("start"             (return (values 'START_KW $@)))
  ("accept"            (return (values 'ACCEPT_KW $@)))
  ("Verify"            (return (values 'VERIFY_KW $@)))
  ("inputset"          (return (values 'INPUTSET_KW $@)))
  ("transition"        (return (values 'TRANSITION_KW $@)))
  ("on"                (return (values 'ON_KW $@)))
  ("goto"              (return (values 'GOTO_KW $@)))
  ("canreach"          (return (values 'CANREACH_KW $@)))
  ("deterministic"     (return (values 'DETERMINISTIC_KW $@)))
  ("isempty"           (return (values 'ISEMPTY_KW $@)))
  ("terminates"        (return (values 'TERMINATES_KW $@)))
  ("equal"             (return (values 'EQUAL_KW $@)))

  (";"                 (return (values 'SEMICOLON $@)))
  (","                 (return (values 'COMMA $@)))
  ("{"                 (return (values 'LBRACE $@)))
  ("}"                 (return (values 'RBRACE $@)))
  (":"                 (return (values 'COLON $@)))


  ;; STRING
  ("\\\"[a-zA-Z0-9_ ]*\\\"" 
   (return (values 'STRING $@)))

  ;; IDENTIFIER
  ("[a-zA-Z][a-zA-Z0-9_]*" 
   (return (values 'IDENTIFIER $@)))

  )
</code></pre>
After looking at some <a href="https://www.irif.fr/~jch/software/cl-yacc/cl-yacc.html">cl-yacc manual</a>
We find that in order to create a parser using cl-yacc
we must use the <code>define-parser</code> macro. This macro generates a parser and binds it to the special variable <em>name</em>.
First we need to specify the start-symbol and terminals:
<pre><code>(define-parser *noam-print-reductions*
  (:start-symbol program)
  (:terminals (AUTOMATON_KW STATES_KW START_KW ACCEPT_KW VERIFY_KW
               INPUTSET_KW TRANSITION_KW ON_KW GOTO_KW 
               CANREACH_KW ACCEPTS_KW DETERMINISTIC_KW ISEMPTY_KW EQUAL_KW TERMINATES_KW 
               SEMICOLON LBRACE RBRACE COMMA COLON
               IDENTIFIER STRING)) 
</code></pre>
Then we can go ahead and put our grammar rules here is the grammar rule for the production <code>state_declaration -&gt; states { ID_LIST };</code> in cl-yacc:</p>

<p><pre><code>(state-declaration
 (STATES_KW LBRACE identifier-list RBRACE SEMICOLON 
  (lambda (states-kw lbrace ids rbrace semicolon)
    (format t "state_declaration -&gt; STATES_KW LBRACE identifier_list RBRACE SEMICOLON~%"))))
</code></pre>
The rest is basically doing the same for all of our production rules.
Here is the complete parser implementation :</p>

<p><pre><code>(define-parser *noam-print-reductions*
  (:start-symbol program)
  (:terminals (AUTOMATON_KW STATES_KW START_KW ACCEPT_KW VERIFY_KW
               INPUTSET_KW TRANSITION_KW ON_KW GOTO_KW 
               CANREACH_KW ACCEPTS_KW DETERMINISTIC_KW ISEMPTY_KW EQUAL_KW TERMINATES_KW 
               SEMICOLON LBRACE RBRACE COMMA COLON
               IDENTIFIER STRING)) 

(program
  (declist (lambda (token)
               (format t "program -&gt; declist~%")
               )))

(dec
 (automaton-declaration (lambda (token)
             (format t "dec -&gt; automaton_declaration~%")
             ))
 (verification-declaration (lambda (token)
             (format t "dec -&gt; verification_declaration~%")
             )))

(declist
  (dec declist (lambda (tx ty)
             (format t "declist -&gt; dec declist~%")
             ))

  ((lambda ()
             (format t "declist -&gt; epsilon~%")
             ))
)

(automaton-declaration
 (AUTOMATON_KW IDENTIFIER LBRACE 
  state-declaration 
  start-state 
  accept-states 
  alphabet-declaration 
  transition-declaration-list 
  RBRACE 
  (lambda (automaton-kw id lbrace state-dec start accept alphabet trans rbrace)
    (format t "automaton_declaration -&gt; AUTOMATON_KW IDENTIFIER LBRACE state_declaration start_state accept_states alphabet_declaration transition_declaration_list RBRACE~%"))))

(state-declaration
 (STATES_KW LBRACE identifier-list RBRACE SEMICOLON 
  (lambda (states-kw lbrace ids rbrace semicolon)
    (format t "state_declaration -&gt; STATES_KW LBRACE identifier_list RBRACE SEMICOLON~%"))))

(start-state
 (START_KW IDENTIFIER SEMICOLON
  (lambda (start-kw id semicolon)
    (format t "start_state -&gt; START_KW IDENTIFIER SEMICOLON~%"))))

(accept-states
 (ACCEPT_KW LBRACE identifier-list RBRACE SEMICOLON
  (lambda (accept-kw lbrace ids rbrace semicolon)
    (format t "accept_states -&gt; ACCEPT_KW LBRACE identifier_list RBRACE SEMICOLON~%"))))

(alphabet-declaration
 (INPUTSET_KW LBRACE string-list RBRACE SEMICOLON
  (lambda (inputset-kw lbrace strings rbrace semicolon)
    (format t "alphabet_declaration -&gt; INPUTSET_KW LBRACE string_list RBRACE SEMICOLON~%"))))

(transition-declaration-list
 (transition-declaration transition-declaration-list 
  (lambda (trans-dec trans-list)
    (format t "transition_declaration_list -&gt; transition_declaration transition_declaration_list~%")))

 (transition-declaration 
  (lambda (trans-dec)
    (format t "transition_declaration_list -&gt; transition_declaration~%"))))

(transition-declaration
 (dfa-transition 
  (lambda (dfa-trans)
    (format t "transition_declaration -&gt; dfa_transition~%"))))

(dfa-transition
 (TRANSITION_KW IDENTIFIER COLON transition-rule-list
  (lambda (trans-kw id colon rules)
    (format t "dfa_transition -&gt; TRANSITION_KW IDENTIFIER COLON transition_rule_list~%"))))

(transition-rule
 (ON_KW STRING COMMA GOTO_KW IDENTIFIER SEMICOLON
  (lambda (on-kw str comma goto-kw id semicolon)
    (format t "transition_rule -&gt; ON_KW STRING COMMA GOTO_KW IDENTIFIER SEMICOLON~%"))))

(verification-declaration
 (VERIFY_KW IDENTIFIER LBRACE property-list RBRACE
  (lambda (verify-kw id lbrace props rbrace)
    (format t "verification_declaration -&gt; VERIFY_KW IDENTIFIER LBRACE property_list RBRACE~%"))))

(property-list
 (property SEMICOLON property-list
  (lambda (prop semicolon prop-list)
    (format t "property_list -&gt; property SEMICOLON property_list~%")))
  (property SEMICOLON  ; 
  (lambda (prop semicolon)
    (format t "property_list -&gt; property SEMICOLON~%")))

  (() ; 
  (lambda ()
    (format t "property_list -&gt; epsilon~%"))))


(property
 (reachable 
  (lambda (reach)
    (format t "property -&gt; reachable~%")))
 (acceptance 
  (lambda (accept)
    (format t "property -&gt; acceptance~%")))
 (determinism 
  (lambda (det)
    (format t "property -&gt; determinism~%")))
 (emptiness 
  (lambda (empty)
    (format t "property -&gt; emptiness~%")))
 (equivalence 
  (lambda (equiv)
    (format t "property -&gt; equivalence~%")))
 (termination 
  (lambda (term)
    (format t "property -&gt; termination~%"))))

(reachable
 (CANREACH_KW LBRACE identifier-list RBRACE
  (lambda (canreach-kw lbrace ids rbrace)
    (format t "reachable -&gt; CANREACH_KW LBRACE identifier_list RBRACE~%"))))

(acceptance
 (ACCEPTS_KW LBRACE string-list RBRACE
  (lambda (accepts-kw lbrace strings rbrace)
    (format t "acceptance -&gt; ACCEPTS_KW LBRACE string_list RBRACE~%"))))

(determinism
 (DETERMINISTIC_KW
  (lambda (det-kw)
    (format t "determinism -&gt; DETERMINISTIC_KW~%"))))

(emptiness
 (ISEMPTY_KW
  (lambda (empty-kw)
    (format t "emptiness -&gt; ISEMPTY_KW~%"))))

(equivalence
 (EQUAL_KW LBRACE identifier-list RBRACE
  (lambda (equal-kw lbrace ids rbrace)
    (format t "equivalence -&gt; EQUAL_KW LBRACE identifier_list RBRACE~%"))))

(termination
 (TERMINATES_KW LBRACE string-list RBRACE
  (lambda (terminates-kw lbrace strings rbrace)
    (format t "termination -&gt; TERMINATES_KW LBRACE string_list RBRACE~%"))))

(string-list
 (STRING COMMA string-list
  (lambda (str comma str-list)
    (format t "string_list -&gt; STRING COMMA string_list~%")))
 (STRING 
  (lambda (str)
    (format t "string_list -&gt; STRING~%"))))

(identifier-list
 (IDENTIFIER COMMA identifier-list
  (lambda (id comma id-list)
    (format t "identifier_list -&gt; IDENTIFIER COMMA identifier_list~%")))
 (IDENTIFIER 
  (lambda (id)
    (format t "identifier_list -&gt; IDENTIFIER~%"))))

(transition-rule-list
 (transition-rule transition-rule-list
  (lambda (rule rule-list)
    (format t "transition_rule_list -&gt; transition_rule transition_rule_list~%")))

 (transition-rule
  (lambda (rule)
    (format t "transition_rule_list -&gt; transition_rule~%"))))

)
</code></pre>
We can then create a function to take in a noam input file and parse it using the lexer and parser we just created as so :
<pre><code>(defun parse-noam-file (filename)
  "Parse a Noam file and write reductions to reductions.txt"
  (with-open-file (output-stream "reductions.txt" 
                                :direction :output 
                                :if-exists :supersede 
                                :if-does-not-exist :create)
    ;; Temporarily bind *standard-output* to our file stream
    (let ((*standard-output* output-stream))
      (with-open-file (input-stream filename :direction :input)
        (let* ((file-contents (make-string (file-length input-stream)))
               (read-chars (read-sequence file-contents input-stream)))
          (parse-with-lexer 
           (noam-lexer (subseq file-contents 0 read-chars))
           *noam-print-reductions*))))))

</code></pre>
Here is a very simple noam file :
<pre><code>Verify A2 {
terminates {"0011"};
equal {A1};
}
</code></pre>
And we get this in the <code>reductions.txt</code> file :</p>

<p><pre><code>string_list -&gt; STRING
termination -&gt; TERMINATES_KW LBRACE string_list RBRACE
property -&gt; termination
identifier_list -&gt; IDENTIFIER
equivalence -&gt; EQUAL_KW LBRACE identifier_list RBRACE
property -&gt; equivalence
property_list -&gt; property SEMICOLON
property_list -&gt; property SEMICOLON property_list
verification_declaration -&gt; VERIFY_KW IDENTIFIER LBRACE property_list RBRACE
dec -&gt; verification_declaration
declist -&gt; epsilon
declist -&gt; dec declist
program -&gt; declist

</code></pre>
Basically, First the STRING (<code>"0011"</code>) is Identified and reduced to  string_list.</p>

<p>Then the termination keyword (<code>terminates {"0011"};</code>)  is reduced to termination nonterminal.</p>

<p>Then the termination nonterminal is reduced to property.</p>

<p>And So On..</p>

<p>Until we get declist reduced to program, which is our start symbol.</p>

<p>Therefore the input has been parsed successfully.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/kimi.png" alt=""  style="width:100%;height:auto;max-width:370px" />
</p></p>
]]></description>
</item>
<item>
	<title> Never Let Go</title>
	<link>https://xemadp.github.io/blog/entries/NeverLetGo.html</link>
	<pubDate>Fri, 14 Feb 2025 01:23:29 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2025-02-14 01:23:29 --->


<h1>Never Let Go</h1>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/ICanSeeYourHouse.png" alt="I Can See Your House From Here"  style="width:100%;height:auto;max-width:600px" />
</p></p>

<p><a href="https://t.me/musicmakesmelosecontrol/2994">Crazy</a>
preachers of our doom</p>

<p>Telling us there is no room</p>

<p>Not enough for all mankind</p>

<p>And the seas of time are running dry</p>

<p>Don&rsquo;t they know it&rsquo;s a lie?</p>

<p>Man is born with the will to survive</p>

<p>He&rsquo;ll not take &ldquo;no&rdquo; for an answer</p>

<p>He will get by</p>

<p>Somehow he&rsquo;ll try</p>

<p>He won&rsquo;t take &ldquo;no&rdquo;</p>

<p>Never let go, no</p>

<p>I hear them talk about Kingdom Come</p>

<p>I hear them discuss Armageddon</p>

<p>They say the hour is getting late</p>

<p>But I can still hear someone say</p>

<p>That is not the way</p>

<p>Man is born with the will to survive</p>

<p>He&rsquo;ll not take &ldquo;no&rdquo; for an answer</p>

<p>He will get by</p>

<p>Somehow he&rsquo;ll try</p>

<p>He won&rsquo;t take &ldquo;no&rdquo;</p>

<p>Never let go, no</p>

<p>Man is born with the will to survive</p>

<p>He&rsquo;ll not take &ldquo;no&rdquo; for an answer</p>

<p>He will get by</p>

<p>Somehow he&rsquo;ll try</p>

<p>He won&rsquo;t take &ldquo;no&rdquo;</p>

<p>Never let go</p>

<p>Never let go</p>

<p>Never let go</p>

<p>Never let go</p>

<p>Never let go&hellip;</p>
]]></description>
</item>
<item>
	<title> The Snowing Hills Where Olive Trees Wither</title>
	<link>https://xemadp.github.io/blog/entries/blasphemous.html</link>
	<pubDate>Wed, 04 Dec 2024 03:54:07 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2024-12-04 03:54:07 --->


<h1>The Snowing Hills Where Olive Trees Wither</h1>

<p><img src="https://xemadp.github.io/blog/pics/olivetrees.png" alt="Where Olive Trees Olives Wither"  style="width:100%;height:auto;max-width:800px" /></p>

<p>Blasphemous is just one of those games that I couldn&rsquo;t help but to play.
It&rsquo;s a Metroidvania set in a realm called Cvstodia.
The visual theme is pretty much Andalucia pixelized into perfection.
I have always enjoyed playing 2D adventure games since I was a kid so Blasphemous was a no brainer.</p>

<h2>Blasphemous</h2>

<p><img src="https://xemadp.github.io/blog/pics/silentsorrow.png" alt="Brohtherhood of the silent sorrow"  style="width:100%;height:auto;max-width:800px" /></p>

<p>The game takes place in Cvstodia.
&ldquo;The Miracle&rdquo; is a force existing in Cvstodia, Transforming everyone into grieving being by
making them suffer for their sins. Basically every creature in Cvstodia is atoning for their
sins and trying to seek penance.
The main character of the game is called the Penitent One, The last remaining member of the brotherhood of the silent sorrow.
His sword, forged from guilt itself, is called Mea Culpa. His goal is to
reach the &ldquo;Cradle of Affliction&rdquo;, and in order to do so he must complete the three
humiliations.</p>

<p>I won&rsquo;t go into the plot of the game much in this blog post.</p>

<h2>Themes</h2>

<p><img src="https://xemadp.github.io/blog/pics/convent.png" alt="Convent of Our Lady of The Charred Visage"  style="width:100%;height:auto;max-width:800px" /></p>

<p>The game explores a grim universe where everyone is at the mercy of
a seemingly evil force, called the Miracle. Almost all of the residents of Cvstodia
are in some way atoning for their sins, begging the miracle for mercy in various ways.
There is an extreme religious theme to the game, which just fits.
The gameplay constantly reminds the player of how unforgiving The Miracle is,
Since dying is not something that the game won&rsquo;t let happen often.
Almost everything has a melancholic vibe to it.
Rooms, mountains, enemies, friends, bosses and music, all of them are
grim and melancholic in design.</p>

<h2>Music</h2>

<p>The Blasphemous Soundtrack, The MUSIC, is out of this world.</p>

<p><a href="https://thegamekitchen.bandcamp.com/album/blasphemous">Arpegios en ocre</a> by Carlos Viola:</p>

<p><audio controls autoplay loop>
    <source src="../audio/ArpegiosEnOcre.mp3" type="audio/mpeg">
    Your browser does not support the audio element.
</audio></p>

<p>The music is composed by Carlos Viola, and perfectly matched the Andalusian
Vibe of the entire game.
The melancholic feeling to every second of every track just makes it perfect
for a game with this theme and also helps in creating an amazing atmosphere.</p>

<p>Even after completing the game, I listen to the Soundtrack frequently.</p>

<h2>What I Loved</h2>

<p><img src="https://xemadp.github.io/blog/pics/isidora.png" alt="Isidora"  style="width:100%;height:auto;max-width:800px" /></p>

<p>Everything.</p>

<p>I always like to challenge myself while playing a video game.
There are a lot of challenging boss fights (and even enemies) in blasphemous, but the game
is also very fluent when it comes to gameplay and is just visually pleasing.</p>

<p>There is one boss fight in blasphemous that maybe took 50 consecutive for me tries to beat without taking damage, Isidora the voice of the dead; so yeah I enjoyed that a lot.</p>
]]></description>
</item>
<item>
	<title> Noam, Automata Formal Verification Language</title>
	<link>https://xemadp.github.io/blog/entries/compilerIII.html</link>
	<pubDate>Mon, 25 Nov 2024 03:09:26 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2024-11-25 03:09:26 --->


<h1>Noam, Automata Formal Verification Language</h1>

<p>Anouncement!!!</p>

<p>I finally decided on a name for my <a href="https://xemadp.github.io/blog/entries/compilerI.html">Automoata Verification language</a>.
I&rsquo;ve decided to call it Noam, after one of the great minds of our generation ( even the prevoius generation too !) Noam Chomsky.
For now I&rsquo;ll focus on the sub-problem of verifying Finite Automate, and hopefully adjust to better capture more automatas.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/NoamLogo.png" alt="Noam Logo"  style="width:100%;height:auto;max-width:700px" />
</p></p>

<p>I feel like I should say this, Noam is just a personal project meant to help me learn about [programming] languages, formal verification and compilers.
In this blog post we&rsquo;ll explore Lexical Analyzers, and implement two lexers for Noam, the first one will be in flex, since it is more standard and will
help us get an Idea of how a finished lexer would look like, The second one will be in Common lisp&rsquo;s cl-lex. this will be the final lexer for Noam.</p>

<p>This seems to be easier to do in lisp, since the parsing is going to be done by either cl-yacc or Common Lisps LALR parser generator,
The lexer is basically a function in both parser generators so no matter if it is implemented using a set of predefined macros, or just a function.</p>

<p>Any of them will do. However the commonlisp one will be used as the default one for Noam.</p>

<p>I have decided to implement the Noam language in Common Lisp.
I think that lisp, with it&rsquo;s symbolic computation and meta-programming is a good choice for most of the lexical/syntactic/semantic analysis.
The lexing/parsing is pretty much the same in all implementation choices, How ever because of Lisp&rsquo;s tendency for great Abstract Syntax Tree generation. Since Lisp&rsquo;s source code is basically an AST and
macros allow the programmer to expand structures within lisp.
for now we will go with the default text-book approach of compiler development. But who knows, maybe in the future we&rsquo;ll change the way we approach it, and do a complete reboot.</p>

<p>Also probably a great choice when someday I decide to have type checking and interactice environment for Noam.</p>

<hr>


<h2>Lexer</h2>

<p>Lexical Analysis is the phase within compiler design that aims to look at the source program through lexical patterns only.
What does that mean? Basically given a stream of input characters, we will try and guess what each lexeme represents in our source program.
A lexeme is a set of characters, that have a specific meaning in our program. We are trying to tokenize our input stream into meaningful bits, in the context of our language.
Finding the lexemes by themselves is not so useful though, we&rsquo;ll have to determine what kind of lexemes they are, this will be useful for the parser.</p>

<p>Take this python program for example.
This could be a sample output of lexer as it reads it:</p>

<p><pre><code>xs = map(\lambda x:x**2, [1,2])
</code></pre>
<code>xs</code>      -> lexeme &lt;-> IDENTIFIER</p>

<p><code>=</code>       -> lexeme &lt;-> ASSIGNMENT_OPERATOR</p>

<p><code>map</code>     -> lexeme &lt;-> MAP_FUNCTION</p>

<p><code>(</code>       -> lexeme &lt;-> LEFT_PARENTHESIS</p>

<p><code>\lambda</code> -> lexeme &lt;-> LAMBDA_DECLARATION</p>

<p><code>x</code>       -> lexeme &lt;-> IDENTIFIER</p>

<p><code>:</code>       -> lexeme &lt;-> COLON</p>

<p><code>x</code>       -> lexeme &lt;-> IDENTIFIER</p>

<p><code>**</code>      -> lexeme &lt;-> POWER_OPERATOR</p>

<p><code>2</code>       -> lexeme &lt;-> INTEGER_LITERAL</p>

<p><code>,</code>       -> lexeme &lt;-> COMMA</p>

<p><code>[</code>       -> lexeme &lt;-> LEFT_BRACKET</p>

<p><code>1</code>       -> lexeme &lt;-> INTEGER_LITERAL</p>

<p><code>,</code>       -> lexeme &lt;-> COMMA</p>

<p><code>2</code>       -> lexeme &lt;-> INTEGER_LITERAL</p>

<p><code>]</code>       -> lexeme &lt;-> RIGHT_BRACKET</p>

<p><code>)</code>       -> lexeme &lt;-> RIGHT_PARENTHESIS</p>

<hr>


<h3>Flex</h3>

<p>The way flex (Fast Lexical Analyzer Generator) works is that we will describe our patterns using lex(flex) notation within a lex.l file.
The lex.l file is parsed by flex, and will give us a C program lex.yy.c, which we will then compile with the C compiler, and get our working Lexer.</p>

<p>Let&rsquo;s Create a lexer for <a href="https://xemadp.github.io/blog/entries/compilerI.html">The Noam grammar</a> using flex.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/noamflexI.png" alt="Noam Lexer with flex"  style="width:100%;height:auto;max-width:800px" />
</p></p>

<p>Apart from the lexeme kinds ( keywords, IDENTIFIERS, Literals, &hellip; ) it&rsquo;s also good to save some other info such as number of the line the token is found at, character line and etc,
for better error detection.
These &ldquo;lexeme kinds&rdquo; are more formally referred to as token_names in most text books.</p>

<p>Looking at our grammar and with some flex magic we get:</p>

<p><pre><code class="lex">%{
#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;

int lino = 1; // To keep track of the number of lines (starts at 1).
int chars = 0; // To keep track of the number of characters.
int words = 0; // To keep track of the number of words.
%}

%option noyywrap

%%

"Automaton" {words++; chars += yyleng; printf("(AUTOMATON, \"%s\",%d,%d)\n", yytext, lino, words);}
"states" {words++; chars += yyleng; printf("(STATES, \"%s\",%d,%d)\n", yytext, lino, words);}
"start" {words++; chars += yyleng; printf("(START, \"%s\",%d,%d)\n", yytext, lino, words);}
"on" {words++; chars += yyleng; printf("(ON, \"%s\",%d,%d)\n", yytext, lino, words);}
"goto" {words++; chars += yyleng; printf("(GOTO, \"%s\",%d,%d)\n", yytext, lino, words);}
"equal" {words++; chars += yyleng; printf("(EQUAL, \"%s\",%d,%d)\n", yytext, lino, words);}
"Verify" {words++; chars += yyleng; printf("(VERIFY, \"%s\",%d,%d)\n", yytext, lino, words);}
"terminates" {words++; chars += yyleng; printf("(TERMINATES, \"%s\",%d,%d)\n", yytext, lino, words);}
"canreach" {words++; chars += yyleng; printf("(CANREACH, \"%s\",%d,%d)\n", yytext, lino, words);}
"isempty" {words++; chars += yyleng; printf("(ISEMPTY, \"%s\",%d,%d)\n", yytext, lino, words);}
"deterministic" {words++; chars += yyleng; printf("(DETERMINISTIC, \"%s\",%d,%d)\n", yytext, lino, words);}
"accepts" {words++; chars += yyleng; printf("(ACCEPTS, \"%s\",%d,%d)\n", yytext, lino, words);}
"accept" {words++; chars += yyleng; printf("(ACCEPT, \"%s\",%d,%d)\n", yytext, lino, words);}
"transition" {words++; chars += yyleng; printf("(TRANSITION, \"%s\",%d,%d)\n", yytext, lino, words);}
"inputset" {words++; chars += yyleng; printf("(INPUTSET, \"%s\",%d,%d)\n", yytext, lino, words);}

"{" {chars += yyleng; printf("(LBRACE, \"%s\",%d,%d)\n", yytext, lino, words);}
"}" {chars += yyleng; printf("(RBRACE, \"%s\",%d,%d)\n", yytext, lino, words);}
":" {chars += yyleng; printf("(COLON, \"%s\",%d,%d)\n", yytext, lino, words);}
";" {chars += yyleng; printf("(SEMICOLON, \"%s\",%d,%d)\n", yytext, lino, words);}
"," {chars += yyleng; printf("(COMMA, \"%s\",%d,%d)\n", yytext, lino, words);}

[ \t]+ { chars += yyleng; } /* skip whitespace */

\n { lino++; chars++; }

[a-zA-Z_][a-zA-Z0-9_]* {words++; chars += yyleng; printf("(IDENTIFIER, \"%s\",%d,%d)\n", yytext, lino, words);} /*String*/
\"[a-zA-Z0-9_]*\" {words++; chars += yyleng; printf("(STRING, \"%s\",%d,%d)\n", yytext, lino, words);} /*Identifier*/

. { chars += yyleng; printf("Illegal character: %s at%d\n", yytext, lino); }
%%

int main() {
    yylex(); // Call the lexer
    return 0;
}
</code></pre>
At each occurrence of a reserved keyword, string or Identifier, we will add to our word count, at each lexeme ( even whitespace) we will add to character count, and at each newline escape character, we will add to our
new line counter.
The tokens that we give back are of the form (for now) :</p>

<p><pre><code>(TOKEN_KW, TOKEN_LEXEME, TOKEN_LINENUM, TOKEN_WORD_COUNT)
</code></pre>
By running flex on this lex.l file, and then compiling it&rsquo;s output using gcc, we have officially created our functioning lexer.</p>

<p>The following figure shows how the lexer works in relation to parser and the source program.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/noamflexII.png" alt="Overall Lexer mechanism"  style="width:100%;height:auto;max-width:800px" />
</p></p>

<p>example source program :</p>

<p><pre><code>Automaton A2
{
states {q0, q1};
start q0;
accept { q0 };
input alphabet { "a" , "b" };

transition q0:
        on "a", goto q1;
        on "b", goto q1;

transition q1:
        on "a", goto q0;
        on "b", goto q0;

}

Verify A2 {
accepts {"001"};
terminates {"0010"};
determinism;
isempty;
terminates {"0001110", "00"};
equals {A1,A2};
}
</code></pre>
Token Sequence:</p>

<p>Parser : getNextToken &lt;- (AUTOMATON, &ldquo;Automaton&rdquo;,1,1)</p>

<p>Parser : getNextToken &lt;- (IDENTIFIER, &ldquo;A2&rdquo;,1,2)</p>

<p>Parser : getNextToken &lt;- (LBRACE, &ldquo;{&rdquo;,2,2)</p>

<p>Parser : getNextToken &lt;- (STATES, &ldquo;states&rdquo;,3,3)</p>

<p>.</p>

<p>.</p>

<p>.</p>

<hr>


<h2>Common Lisp Implementation</h2>

<p><code>cl-lex</code> is a package for the CommonLisp programming language. It&rsquo;s meant to work in sync with <code>cl-yacc</code> and it is basically a set of CommonLisp macros, that generate a
lexer for a set of specified patterns using <code>cl-ppcre</code> ( COMMONLISP - PORTABLE PERL COMPATIBLE REGULAR EXPRESSION ).</p>

<p>Let&rsquo;s Look at a specific macro that <code>cl-lex</code> offers.</p>

<p><code>define-string-lexer</code> : Is a macro that defines a function, that takes a string and keyword arguments for the start and end
of a string and returns a closure that takes no arguments and will return the next token each time it is called.</p>

<p>Using this macro, we will create the <code>noam-lexer</code> function, which will work alongside our parser in the future.
Everything else is pretty much the same stuff from before.</p>

<p>Let&rsquo;s first load cl-lex:</p>

<p><pre><code class="lisp">(ql:quickload "cl-lex") ;; THIS RETRIEVES THE CL-LEX PACKAGE.
(defpackage :noam-lexer
  (:use :cl :cl-lex :cl-ppcre))
(in-package :noam-lexer)
</code></pre>
Now let&rsquo;s use <code>define-string-lexer</code> to create our lexer:</p>

<p><pre><code class="lisp">(defvar *current-line* 1)   ; Track current line number

(defun reset-line-tracking ()
  "Resets line tracking variables."
  (setf *current-line* 1
        *line-start* 0))

;; Define the lexer
(define-string-lexer noam-lexer
  ;; Ignore whitespace
  ("[ \\t]+")
  ;; Increment line counter when new line is met.
  ("\\n" (progn
         (incf *current-line*)
         nil))  ; Ignore the newline itself.
  ;; Reserved keywords
  ("Automaton" (format t "(AUTOMATON ~A ~A)~%" $@ *current-line*))
  ("states" (format t "(STATES ~A ~A)~%" $@ *current-line*))
  ("start" (format t "(START ~A ~A)~%" $@ *current-line*))
  ("on" (format t "(ON ~A ~A)~%" $@ *current-line*))
  ("goto" (format t "(GOTO ~A ~A)~%" $@ *current-line*))
  ("equal" (format t "(EQUAL ~A ~A)~%" $@ *current-line*))
  ("Verify" (format t "(VERIFY ~A ~A)~%" $@ *current-line*))
  ("terminates" (format t "(TERMINATES ~A ~A)~%" $@ *current-line*))
  ("canreach" (format t "(CANREACH ~A ~A)~%" $@ *current-line*))
  ("isempty" (format t "(ISEMPTY ~A ~A)~%" $@ *current-line*))
  ("deterministic" (format t "(DETERMINISTIC ~A ~A)~%" $@ *current-line*))
  ("accepts" (format t "(ACCEPTS ~A ~A)~%" $@ *current-line*))
  ("accept" (format t "(ACCEPT ~A ~A)~%" $@ *current-line*))
  ("transition" (format t "(TRANSITION ~A ~A)~%" $@ *current-line*))
  ("inputset" (format t "(INPUTSET ~A ~A)~%" $@ *current-line*))
  ;; Symbols
  ("{" (format t "(LBRACE ~A ~A)~%" $@ *current-line*))
  ("}" (format t "(RBRACE ~A ~A)~%" $@ *current-line*))
  (":" (format t "(COLON ~A ~A)~%" $@ *current-line*))
  (";" (format t "(SEMICOLON ~A ~A)~%" $@ *current-line*))
  ("," (format t "(COMMA ~A ~A)~%" $@ *current-line*))
  ;; Numbers
  ("[0-9]+" (format t "(NUMBER ~A ~A)~%" $@ *current-line*))
  ;; Identifiers
  ("[a-zA-Z_][a-zA-Z0-9_]*" (format t "(IDENTIFIER ~A ~A)~%" $@ *current-line*))
  ;; Strings
  ("\"[a-zA-Z0-9_]*\"" (format t "(STRING ~A ~A)~%" $@ *current-line*))
  ;; Catch-all for unknown tokens
  (".+" (format t "ILLEGAL TOKEN: ~A~%" $@))
  )

;; Function to use the lexer
(defun tokenize-string (input)
  "Tokenize an input stream using the defined lexer."
  (let ((lexer (noam-lexer input)))
    (loop
       for token = (funcall lexer)
       while token
       do (format t "~A~%" token))))
</code></pre>
We define the <code>tokenize-string</code> function and apply our lexer through that.
In a more realistic scenario, the parser <code>cl-yacc</code> would use noam-lexer, but here we define this function to mimic that.</p>

<p>The only thing to have in mind here is that, we need to call (reset-line-tracking) before we perform lexical analysis on a new input stream, to reset the line number.
For now, this is a sufficient lexer. It returns tokens in the form <code>(TOKEN_KEYWORD LEXEME LINE_NUMBER)</code>.</p>

<p>Sample noam source program:</p>

<p><pre><code class="Noam">Automaton A1 {
states {q1, q2};
start q1;
accept {q2};
inputset {"0", "1"};
transition q1:
    on "0", goto q2;
    on "1", goto q2;
transition q2:
    on "0", goto q1;
    on "1", goto q1;
}
</code></pre>
And the output produced by noam-lexer is:</p>

<p><pre><code>(AUTOMATON Automaton 1)
(IDENTIFIER A1 1)
(LBRACE { 1)
(STATES states 2)
(LBRACE { 2)
(IDENTIFIER q1 2)
(COMMA , 2)
(IDENTIFIER q2 2)
(RBRACE } 2)
(SEMICOLON ; 2)
(START start 3)
(IDENTIFIER q1 3)
(SEMICOLON ; 3)
(ACCEPT accept 4)
(LBRACE { 4)
(IDENTIFIER q2 4)
(RBRACE } 4)
(SEMICOLON ; 4)
(INPUTSET inputset 5)
(LBRACE { 5)
(STRING "0" 5)
(COMMA , 5)
(STRING "1" 5)
(RBRACE } 5)
(SEMICOLON ; 5)
(TRANSITION transition 6)
(IDENTIFIER q1 6)
(COLON : 6)
(ON on 7)
(STRING "0" 7)
(COMMA , 7)
(GOTO goto 7)
(IDENTIFIER q2 7)
(SEMICOLON ; 7)
(ON on 8)
(STRING "1" 8)
(COMMA , 8)
(GOTO goto 8)
(IDENTIFIER q2 8)
(SEMICOLON ; 8)
(TRANSITION transition 9)
(IDENTIFIER q2 9)
(COLON : 9)
(ON on 10)
(STRING "0" 10)
(COMMA , 10)
(GOTO goto 10)
(IDENTIFIER q1 10)
(SEMICOLON ; 10)
(ON on 11)
(STRING "1" 11)
(COMMA , 11)
(GOTO goto 11)
(IDENTIFIER q1 11)
(SEMICOLON ; 11)
(RBRACE } 12)
</code></pre>
<h1 align="center"> THANKS FOR READING </h1>
<p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/wiz.jpg" alt="wiz"  style="width:100%;height:auto;max-width:360px" />
</p></p>

<p align="center">
..--.-wzrd-.--..
</p>

]]></description>
</item>
<item>
	<title> The Overall view of the formal verification language</title>
	<link>https://xemadp.github.io/blog/entries/compilerII.html</link>
	<pubDate>Fri, 22 Nov 2024 21:03:49 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2024-11-22 21:03:49 --->


<h1>The Overall view of the formal verification language</h1>

<p>In my <a href="https://xemadp.github.io/blog/entries/compilerI.html">last blog</a> I talked about a
personal project of mine, writing a simple formal verification language for finite automatas, with
learn as you go mindset.</p>

<p>In this blog post I want to talk more about the overall gist of what it would do.
The basic Idea is that, Given a set of Automata Declarations and a set of statements about them,
prove or disprove the verification statements.</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/workhard.png" alt="Compass"  style="width:100%;height:auto;max-width:600px" />
</p></p>

<p>Here is how a source program would look like within the specification of this language:</p>

<p><pre><code>Automaton A1 {
    states {q0, q1};
    start {q0}
    accept {q1};
    inputset {"0", "1"};
    transition q0:
        on "0", goto q1;
        on "1", goto q1;
    transition q1:
        on "0", goto q0;
        on "1", goto q0;
}
Automaton A2 {
    states {q0, q1};
    start {q0}
    accept {q1};
    inputset {"a", "b"};
    transition q0:
        on "a", goto q1;
        on "b", goto q1;
    transition q1:
        on "a", goto q0;
        on "b", goto q0;
}
Verify A2 {
    deterministic;
    terminates {"000111"};
    accepts {"000"};
    equal {A1};
}
</code></pre>
<code>Automaton</code> shows that a machine declaration is being made, <code>Verify</code> shows that verification statements are being declared.
The compiler should be able to take this as an input, and then for each verification statement, return the logical outcome of those statements.</p>

<p><code>deterministic</code>         -> is A2 deterministic?                            -> question of determinism              -> True or False</p>

<p><code>terminates {"000111"}</code> -> does A2 terminate on the string &ldquo;000111&rdquo;        -> question of termination              -> True or False</p>

<p><code>accepts {"000"}</code>       -> does A2 accept the string &ldquo;000&rdquo;                 -> question of acceptance               -> True or False</p>

<p><code>equal {A1}</code>            -> is A2 equal to A1?                              -> question of equivalence of Automatas -> TRUE or False</p>

<p>So that&rsquo;s the overall idea so far.
I don&rsquo;t want to think too much about the specification and usage too much so far.</p>

<p>It will all change as we go forward and learn more about different topics and methods in the Programming Language/ Compiler/ Automata Theory/ Formal Verification Spaces.</p>

<p>In the <a href="https://xemadp.github.io/blog/entries/compilerIII.html">next blog</a> post we&rsquo;ll go over what lexical analysis is and we&rsquo;ll be writing a lexical analyzer, using flex and cl-lex.</p>
]]></description>
</item>
<item>
	<title> Making A Compiler of My Own</title>
	<link>https://xemadp.github.io/blog/entries/compilerI.html</link>
	<pubDate>Thu, 21 Nov 2024 06:58:21 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2024-11-21 06:58:21 --->


<h1>Making A Compiler of My Own</h1>

<p>During the last summer, I got into thinking; What would a program language look like
if it would be designed to perform euclidean construction only?</p>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/compass.png" alt="Compass"  style="width:100%;height:auto;max-width:900px" />
</p></p>

<p>The programming language would be assumed to only have a &ldquo;Straightedge&rdquo; and a &ldquo;Compass&rdquo;, and try to reason about certain input streams ( programs ).
Is the provided construnction in the program correct? And other such questions.
This got me into thinking and researching a lot about programming languages, designing them and of course compilers.
I read more and more about compilers, and I got enticed enough to pick it up as a lesson in the current semester (five) of Uni.
When given more thought, I decided I want to learn more about formal methods, theorem provers like coq and agda and so fourth.</p>

<p>I finally settled with this: Make a programming language to do
basic formal verification in Automata Theory.
In order not to neglect my new found love for compilers,
I decided to start at just that.
Making a compiler for a language ( yet to be named ), that does just what I mentioned earlier.</p>

<h1>Formal Verification of Automata</h1>

<p>The idea is that, given a program consisting of automata declarations and then some verification statements, prove or disprove the given statements.
I&rsquo;ve decided to use lex/bison for the lexical analyzer generator
and parser respectively.</p>

<p>So far I&rsquo;ve been working on a lexical analyzer. And I&rsquo;ve come up with the current language specification:</p>

<p><pre><code>program = { automaton_declaration | verification_declaration };

automaton_declaration = "Automaton" identifier "{"
state_declaration
start_state
accept_states
alphabet_declaration 
{ transition_declaration }

"}";

state_declaration = "states" "{" {state, ","} state "}" ";";
start_state = "start" state, ";";
accept_states = "accept" "{" { state } "}", ";";
state = identifier;

alphabet_declaration = "inputset" "{" {string, ","}, string "}", ";";

transition_declaration = dfa_transition;
dfa_transition = "transition" state, ":" { transition_rule }

transition_rule = "on" string,"," "goto" state, ";";

verification_declaration = "Verify" identifier "{"
property_list
"}";

property_list = { property, ";"};
property = reachable | acceptance | determinism | emptiness | equivalence;
reachable = "canreach" "{" { state, "," } state  "}";
acceptance = "accepts"  "{" { string,"," } string "}";
deerminism = "deterministic";
emptiness = "isEmpty";
equivalence = "equal" "{" { identifier,"," } identifier "}" ;
termination = "terminates" "{" { string, "," } string "}";

identifier = letter , { letter | digit | "_" } ;

letter =  "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z";

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

symbol = "[" | "]" | "{" | "}" | "(" | ")" | "&lt;" | "&gt;"
       | "'" | '"' | "=" | "|" | "." | "," | ";" | "-" 
       | "+" | "*" | "?" | "\n" | "\t" | "\r" | "\f" | "\b" ;

string = { character };
character = letter | digit | symbol | "_" | " " ;
</code></pre>
This Specification is prone to change of course. There are probably a lot of left recursions and ambiguities I need to sort out, This is the process so far.
I&rsquo;ve been successful in creating a lexical analyzer for this grammar using flex.
The topics of these series of blog posts will probably alternate between Compilers in general, and the Compiler I&rsquo;m writing.</p>

<h1>Lexical Analyzers</h1>

<p>What is a Lexical Analyzer?</p>

<p>Well to answer that question, the input stream ( input program ) of a compiler needs to first be analyzed in some lexical context.
Meaning that another program ( Lexer ) needs to first only look at these series of symbols, and decide what they represent lexically.
For example in a given stream <code>a = 2</code>, what is <code>a</code>? Is it a number? A string? Or perhaps an <code>IDENTIFIER</code>?
Doing this helps a lot when it comes to basic error detection and also paves the way for the parse r to function seamlessly.</p>

<h2>Symbol Table</h2>

<p>The symbol table is a universal data structure that keeps track of some token info to be shared by all phases of the compiler. Kinda like a universal Database among all phases lexer, parser, etc &hellip;</p>

<p>I&rsquo;ve also managed to make a functioning symbol table to use alongside the symbol table.</p>

<p>Let&rsquo;s see how far this project of mine makes it.</p>
]]></description>
</item>
<item>
	<title> Perfect Blue</title>
	<link>https://xemadp.github.io/blog/entries/PerfectBlue.html</link>
	<pubDate>Fri, 03 May 2024 03:28:45 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2024-05-03 03:28:45 --->


<h1>Perfect Blue</h1>

<p>It&rsquo;s been a while since I&rsquo;ve been wanting to write about a movie here
on my blog, almost all of my drafts are about movies nowadays, but since I
have no experience writing about the films I watch, I couldn&rsquo;t really settle on how or what to write about.
I finally made the decision to write about <em>Perfect Blue</em> when I was discussing this dilemma with a friend of mine.
So thanks! You who shall remain anonymous.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/perfectblue.jpg" alt="Perfect Blue"  style="width:100%;height:auto;max-width:350px" />
</p></p>

<p>The works of Satoshi Kon have always left me mesmerised.
I had seen <em>Paprika</em> prior to Perfect Blue and it was also quite hard to grasp on but equally engaging in the same manner.
Perfect Blue is honestly close to perfect in so many ways, the great cinematography, the amazing characters, mystifying eerie soundtrack.
The self references in this movie are superb, the originality in both form and content bewilders me.
The themes that the film delves into, to me, are situations that anyone would find themselves into in a coming of age scenario.
At the same time, the psychological aspects of mimarin&rsquo;s journey on the surface level, brought to the wild extremes, are not usually thought
about when pondering about such feelings.
Without further adieu let&rsquo;s first dive into the character of Satoshi Kon&rsquo;s Perfect Blue and then jump into different segments of the movie.
I&rsquo;ll try to convey what I understood of the plot and the underlying themes within the breakdown of the film chronologically in 4 segments.</p>

<p><strong>DISCLAIMER: Reader discretion is advised! Included are themes of gore, rape, paranoia, stalking and identity dysphoria! Also, Spoiler alert obviously</strong></p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/mimagrocery.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p></p>

<h1>Characters</h1>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/mimarumi.jpg" alt="Mima and Rumi"  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Mima &amp; Rumi
</p></p>

<ul>
<li>Mimarin : The <em>protagonist</em> of the story, A young pop idol in the group CHAM, moved to Tokyo to sing. She decides to step down from the idol world and start a career in acting, completely reshaping her image in the publics eye and transitioning into an actress.</li>
<li>Rumi: One of Mima&rsquo;s managers. Former pop idol, turned manager of entertainers. She is keen on the fact that Mimarin is better off as a pop idol and that she can&rsquo;t <strong>become</strong> an actress.</li>
<li>Me-Mania: A fan of CHAM, one of the bodyguards in the last concert of CHAM that Mimarin appears in.</li>
<li>Idol Mima: An image. The complete form of a pop idol that is Mimarin. Always appearing in the dress that Mima wore in her last concert. Also this character has two ways of appearing, in the beginning it&rsquo;s just an image but later in the film, a physical manifestation is also attached.</li>
</ul>


<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/memania.jpg" alt="Me-Mania"  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Me-Mania
</p></p>

<p>The characters are presented in a basic way, I will go into the transitions of each of them as we move along.</p>

<hr>


<h1>Metamorphosis</h1>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/CHAM.jpg" alt="CHAM!"  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
CHAM!
</p></p>

<p>The movie starts by introducing us to CHAM, a pop group that is compromised of three memebers, one of them is Mimarin, the main character of the film.
CHAM is holding a concert in an open arena, this is the last concert that Mimarin is going to be in since she is leaving the group to pursue a career in acting.
There is a group trying to start a ruckus in the concert, one of the bodyguards, Me-Mania, gets in a physical fight with them and after that they leave.
Mimarin smiles at Me-Mania and he notices that.
She performs her last song, she then goes on to perform in a television series where she has only one line.
The voice of Mima when she sings is evidently different from when she talks, I think this is just a technical
shortcoming, but it&rsquo;s funny how it signifies that Mima is not quite herself when she&rsquo;s performing as an idol.
Since this part of the movie shows the difference between Mima as an idol and her daily routine, this could actually apply.
Rumi is upset with her leaving CHAM and it shows.
Mimarin goes home to find mail about something called Mima&rsquo;s Room.
At first she thinks that the mentioned Mima&rsquo;s Room is her actual room and her paranoia begins to grow.
She receives a weird phone call and at the same time she get&rsquo;s a fax with the words TRAITOR written repeatedly on it.</p>

<hr>


<h1>Double Bind</h1>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/actressmima.jpg" alt="Mima the actress"  style="width:100%;height:auto;max-width:500px" />
</p></p>

<p>She goes on set to act her line in the television series <em>Double Bind</em>.
Rumi is there, still distressed about the fact that Mima is trying to become an actress.
Rumi tell&rsquo;s Mima about the mail she got, Mima&rsquo;s Room is apparently a web page about Mima.
Me-Mania is spotted on the set, A letter is received by one of Mima&rsquo;s managers
( not Rumi ) and it&rsquo;s blown in his hand. On the letter it is said that &ldquo;this is only a warning&rdquo;.
She get&rsquo;s home visits the website and at first she is amused by it but more paranoia follows after.
The page has, in detail, everything that Mima has done everyday and is presented from Mima&rsquo;s prespective, meaning
there is detailed sentiments of her in the page.
She see&rsquo;s a newspaper article that says the ruckus makers of the concert are in critical condition, then she notices Me-Mania looking at her.
She starts seeing Me-Mania as a symbol for violence.</p>

<p><p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/mimasroom.jpg" alt="Mima's room"  style="width:100%;height:auto;max-width:500px" />
<img src="https://xemadp.github.io/blog/pics/devastated.jpg" alt="Tired"  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Mima&rsquo;s Room
</p></p>

<p>The new CHAM with two members is doing amazing, hitting the top 100 chart.
Mima recognizes this and doesn&rsquo;t know what to feel about it. She is also approached
for a modeling opportunity on the street.
The screenwriter for Double Bind has decided that Mima should play in a scene in which the character Mima
plays get&rsquo;s raped. Considering all of her acting career up to that point is just one line in the show that is
devastating.
Rumi opposes this harshly but Mima decides that she has chosen to be an actress and that she should do this scene.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/unwanted.jpg" alt=""  style="width:100%;height:auto;max-width:640px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
How did it get to this&hellip;
</p></p>

<p>Mima does the scene and while acting, is reminded of how loved she was by her fans when she was in CHAM.
A feeling of lost purity and innocence ensues. She is conflicted but she decides to think of it as a part
of graduating from being an idol and becoming an actress.
She goes home to find that her fish have died, this finally breaks her and she starts panicking.
Crying and trying to convince her inner self that she also didn&rsquo;t want to do the scene.
This is the first time in the movie that we start seeing the image of <em>Idol Mima</em> in different reflective
surfaces. Mima see&rsquo;s an image, Idol Mima, degrading Mima for doing the scene. She is conflicted.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/deadfish.jpg" alt="Dead fish"  style="width:100%;height:auto;max-width:500px" />
<img src="https://xemadp.github.io/blog/pics/idolmima.jpg" alt="Idol Mima"  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
She didn&rsquo;t want to do it either.
</p></p>

<p>We get a scene of Me-Mania writing in the Mima&rsquo;s room web page. In a particular scene he is shown from behind.
And I couldn&rsquo;t help but notice that there is a rope attached to the top of the room all the way to the bottom;
I think this is foreshadowing the idea that Me-Mania is somehow being deceived to believe things that are not
true and is forced by outer knowledge to do stuff.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/puppet.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p></p>

<p>Idol Mima is appearing more as we progress, talking to Mima and trying to degrade her and tell her that she is
tarnished. Also this is the point in the movie in which we get arguably the BEST eerie music of any
psychological thrillers of it&rsquo;s time. The screenwriter for Double Blind is killed mysteriously in an elevator,
with CHAM blasting from a speaker.
And That concludes the <em>Double Blind</em> segment.</p>

<hr>


<h1>Divergent Reflections</h1>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/concernedmima.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p></p>

<p>Mima see&rsquo;s Idol Mima again and her paranoia grows even more when she hears of the screenwriters death.
She signs a modeling contract with a photographer that is known for getting nude images of his models.
And the photographer does just that.Idol Mima talks with Mima again, trying to tell her that she was better
off as an Idol. It&rsquo;s apparent at this point in the movie that Idol Mima is a mental character developed by
Mima as a result of deception from Mima&rsquo;s room and her own conflict with her identity.</p>

<p><p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/mimaref1.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
<img src="https://xemadp.github.io/blog/pics/mimaref2.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Divergent Reflections
</p></p>

<p>We see a scene with Me-Mania in his room, mailing with someone that is supposedly the <em>real Mima</em>
obviously this is not the case, he is told by the <em>real Mima</em> that the Mima that is an actress is
actually an impostor and that he should buy all the magazines with Mima&rsquo;s nude photographies in it.
He is told to get rid of Mima. Once an eager fan of CHAM and Mima is now pushed by deception
with someone to act bizarrely, at this point it&rsquo;s known who was behind all of the gore and killing.
Radicalized by the para-social relationship that he has developed with his favorite icon.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/parasocialrelationship.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Idol Mima Hugging Me-Mania
</p></p>

<p>More and More and More Occurrences of Idol Mima are happening. Mima is becoming more distressed and detached
from reality. She sees Idol Mima talking on the CHAM podcast and starts following her, the persuasion ends
in Mima getting hit by a truck. Mima wakes up after that as if she has had a nightmare.
Rumi visits Mima and talks to her, being very subtle, she tells Mima that she should stop visiting
the Mima&rsquo;s Room web page. However it&rsquo;s kind of obviously apparent that she is hinting it in a reverse psychological
way.
Mima can&rsquo;t tell the difference between reality and what&rsquo;s not real anymore.
In the next visit by Rumi, Mima seems completely cut off, breaking tea cups, to see if her blood is real.
The only way that she can tell if she did something or not, is by reading the posts on Mima&rsquo;s Room.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/lostmima.jpg" alt=""  style="width:100%;height:auto;max-width:640px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
I guess&hellip; I went to Harajuku today&hellip;
</p></p>

<p>The Modeling Photographer of Mima, is receiving a pizza and get&rsquo;s killed by the person who brought
the pizza to his house, we find out that it was Mima who did that, and then get the shot of her waking
up again as if she was having a nightmare with the blood soaked delivery clothes still in her closet.
She is being deceived to do unspeakable acts without knowing it. Upon finding this out, she is conflicted
even more with the grasp on reality. She can&rsquo;t tell if she&rsquo;s acting or dreaming or doing something in the
real world anymore. The anger of Idol Mima is manifesting itself in her brain and forcing her to do all of
this.
After a shoot for the series Double Bind, Mima is kidnapped by Me-Mania, and in the intense physical
struggle that ensues, she is almost raped by Me-Mania before knocking him unconscious and then
finding her in front of camera&rsquo;s as if she was acting. Later she finds herself in her apartment
but something is off, the fish are alive, the CHAM poster is up and her house has been relocated, so it&rsquo;s definitely not her apartment.
Idol Mima greets her in a new red dress. Mima finds out that this image of Idol Mima is actually Rumi. It was her all along who pretended to be the Real Idol Mima.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/doublebind.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Rumi is Idol Mima.
</p></p>

<p>They fight and eventually Rumi get&rsquo;s stabbed by a big glass shard and goes unconscious, Mima is also hurt.
The film ends with Rumi in a mental hospital , rarely getting out of the Idol Mima character.
Mima has found her identity as an actress and is no longer haunted by the images of Idol Mima.</p>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/rumi.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
<img src="https://xemadp.github.io/blog/pics/realmima.jpg" alt=""  style="width:100%;height:auto;max-width:500px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Shattered Mirrors.
</p></p>

<hr>


<h2>Epitaph</h2>

<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/found.jpg" alt=""  style="width:100%;height:auto;max-width:720px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
No, I&rsquo;m real!
</p></p>

<p>Rumi, a former Pop Idol keeps her sanity by religiously praising Idol Mima in her mind and managing her.
When Mima is not an Idol anymore Rumi becomes more deranged as time goes on, and start to develop the Dissociative Mental disorder that makes her think that she is Idol Mima.
She deceives Mima, Me-Mania, herself even. To the point where Mima can&rsquo;t know if anything is real or not.
But eventually Mima prevails.
Now The absolute concept of coming of age, to let go of your innocence and become an <em>actor</em> when you grow up
is neatly portrayed in this movie; However one cannot do without pointing out that the very psychological aspect
of such situation is what creates the mere horror. The fact that Mima herself, to some extend, could not let
go of her innocence and feared to not be as popular and loved as she was, had she stayed in CHAM.
The fear of lost opportunity, the horror of not being in the spotlight, the vulgarity of her career taking away her purity is too much to bear.
Satoshi Kon does an amazing job at pointing out how identity dysphoria can develop in our age and how the <em>fans</em> can develop harsh and unrealistic
para-social relationships with their icons to the point that they idolize them so much that they can actually become demented and do anything to
be in touch with them. Satoshi Kon somehow just knew that this would be a thing before anyone did. Look at any online platform and how these streamers/youtubers/etc. are
actually talking about the weirdness of para-social activities of their so called fans. How this concept feed into sexual idolization and how platforms like onlyfans can
milk even this psychotic behavior for money. That&rsquo;s all I have to say about this movie.
I&rsquo;ll try to keep future posts about films shorter and not delve into each and every detail of it.
I&rsquo;m kind of a novice, and It&rsquo;s definitely been a great experience writing about perfect blue.</p>

<p><strong>tldr of the story: Rumi gaslit everyone and was defeated in the end.</strong></p>

<hr>


<p align="center" style="line-height:1.1;font-size:22px">
THANKS TO ALL OF YOU WHO READ THIS! 
I WOULD BE HAPPY TO RECEIVE YOUR COMMENTS ABOUT
THIS BLOG POST SO PLEASE CONSIDER GETTING IN CONTACT 
WITH ME IF YOU HAD ANYTHING TO SHARE!
</p>

]]></description>
</item>
<item>
	<title> Italian With Michel Thomas I</title>
	<link>https://xemadp.github.io/blog/entries/Italian.html</link>
	<pubDate>Fri, 12 May 2023 15:06:18 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2023-05-12 15:06:18 --->


<h1>Italian With Michel Thomas I</h1>

<hr>


<p><a href="https://xemadp.github.io/blog/entries/Spanish.html">Learning Spanish with Michel Thomas</a>
was a pleasant experience for
me even though I didn&rsquo;t go through the audio tracks as well as I
should have and ended up forgetting most of the Spanish I learned
because I didn&rsquo;t take keep on reading in Spanish and educating myself
enough. That was of course because of the certain events that happened
in my life at that time.
I had become disappointed in regards to learning Romance languages
after all, until my ambition for learning The Latin Language™
prompted me to start again.</p>

<p><img src="https://xemadp.github.io/blog/pics/quasimodo.gif" alt="Quasimodo"  style="width:100%;height:auto;max-width:310px" /></p>

<p>I&rsquo;ve decided to learn Italian by the Michel Thomas method this time
because my ultimate goal is to learn Latin and I feel like Italian
would be a better gateway language to Latin.</p>

<h1>Why Latin</h1>

<hr>


<p><img src="https://xemadp.github.io/blog/pics/romanpepe.png" alt="Roman Pepe"  style="width:100%;height:auto;max-width:550px" /></p>

<p>I plan to write extensively about why Latin is worth
learning on my blog, so I will not elaborate too much here.
One of the reasons I feel like Latin is worth learning
is that many old philosophical and historically important
scientific works have first been compiled in Latin
and anyone who knows more than one language knows that
no matter what you do, information is lost in translation
almost like looking at a 2D projection of a 3D object and
trying to completely figure it out, it&rsquo;s simply not
descriptive enough.</p>

<p>But Latin has many more linguistic features that make it
superior for reading and writing in, going back to the
projection analogy, we humans cannot cannot visually perceive
a 4D object but using mathematics we can find out about
it&rsquo;s properties, Latin is mathematics in this case,
meaning it makes sense to write heavy scientific/philosophical
works in Latin since it can relay more information on a given
subject.</p>

<h1>Why Italian</h1>

<hr>


<p><img src="https://xemadp.github.io/blog/pics/italianpepe.png" alt="Italian Pepe"  style="width:100%;height:auto;max-width:420px" /></p>

<p>Learning any romance language can be easy
if you already know English since many
English words are derived from romance languages.
Italian is the language of Italy, one could imagine
Italy as the modern day remains of the once existing
roman empire, and hence it is grammatically the closest
to Latin, of course the grammar of Latin is much more
comprehensive than that of Italian.
The vocabulary and the spelling of words in
Italian also mimic Latin closely.
Works of scientific importance in Italy are
also great gateway books into Latin works
because of the cultural likeness of them.</p>

<p>I am personally interested in the history and specially
in the mathematical discoveries made in Italy.
So it would be easier for me to learn Italian
hence I will do so.
The Cinema of Italy has always been very
touching for me (e.g: Pasolini )
I still have many great Italian movies to
watch and learning Italian after/alongside it will surely
prove to be beneficial.
Italian songs have also been in my playlists
since long ago, another reason for me to be biased
towards learning Italian.
Expect more blog posts about the Italian language as well.</p>

<h1>My Experience Learning Italian with Michel Thomas So Far</h1>

<hr>


<p>The Italian course using the Michel Thomas method seems
to be pretty similar to the Spanish one as far as learning
new vocabulary and making sentences go but it
seems to move to more complicated grammatical rules
faster than the Spanish one.
This time I am listening to the audio tracks
with better concentration and I have insight
on how to get the best out of a Michel Thomas
course, It looks more promising this time around
for me and I hope it stays that way.</p>
]]></description>
</item>
<item>
	<title> Against Intellectual Property</title>
	<link>https://xemadp.github.io/blog/entries/IP.html</link>
	<pubDate>Thu, 04 May 2023 22:42:10 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2023-05-04 22:42:10 --->


<h1>Against Intellectual Property</h1>

<p>You hear the words IP ( Intellectual Property ) A lot these
days. Big companies and law firms use this definition to set rules
that are totally disrespectful of the rights of ordinary people.</p>

<p><img src="https://xemadp.github.io/blog/pics/copyleft.jpg" alt="" /></p>

<p>The term IP implies that, that particular thing, be it a digital version
of a song, a movie, or a piece of software is in fact some sort of PROPERTY, when Europeans came
to the Americas, The Natives had no clue what the meaning of property was,
When the white man proposed to buy Manhattan from the natives, they thought
the idea of someone owning land as property was so bizarre that they wanted
to sell the sky as well!</p>

<p>The relationship between us and the big firms/companies
is not so different from that of the white man and natives,
it is similar in the sense that we really don&rsquo;t fathom the
idea of IP because the reality is so bizarre that it doesn&rsquo;t
really make sense to us, normally we wouldn&rsquo;t accept such things
as patents and trade secretes, if we knew what those terms really entailed
for us.</p>

<p>The Confusing nature of the term Property makes it so that
A lot of people can be exploited.
In my opinion the most important feature of anything that
is considered Property is that it must be physically tangible
meaning for example if you take a random carton of milk out of
a supermarket without paying for it, the physical tangibility
of that carton of milk elicit that the store owner has now
suffered meaningful physical damage, meaning he now has one
less carton of milk in supply, meaning he will not make enough
money to equally benefit and buy the same carton of milk next month etc, etc.</p>

<p>Let&rsquo;s consider for a moment a movie that was made in 2013, the current
copyright law tells us that we have to wait for &ldquo;the creator&rdquo; to die plus
70 years to be able to &ldquo;lawfully&rdquo; redistribute the movie amongst ourselves,
anything that isn&rsquo;t that is unlawful and criminal.</p>

<p>It all seems to me that this definition is set in place for people
with specific attributions to make money, what are these attributions
you ask? Well it seems the more you are inclined to like usury, theft and
making money without actually doing anything meaningful, this system
would help you out better, consider Sony after the death of Michael Jackson
( and even before that !), just how much money do you think a company like
Sony makes leeching off of the products of dead artists?</p>

<p>Now to be perfectly honest I&rsquo;m not saying that we should get rid of the IP
completely, I&rsquo;m just presenting how the many confusing parts in the definition of IP
are used to bleed hard working people and benefit the big companies who make money
for the sake of existing, when unrealistic laws like the one mentioned above are set,
many rights are taken away from us, and much like the Native-Americans,
Many of us don&rsquo;t really think ( or want to think ) how this effects us or maybe grasp the entire
idea behind these laws, we are being bled dry from our rights and we don&rsquo;t even
fight back slightly for them.</p>

<h2>Pirates!</h2>

<p>To call those who harmlessly copy files and share them within some community
the same thing you call savage thieves who raid normal ships and steal everything,
truly shows the mental image they are trying to relay here, what they are basically saying
is that if you copy a file &ldquo;unlawfully&rdquo;, what you have done
amounts to about the same as, setting an entire ship full of harmless people
on fire and stealing everything they have got.
Despite their efforts though the term pirate has been embraced by the community,
although it should never be forgotten where this word comes from.</p>

<h2>A couple of examples</h2>

<h3>Trademarks</h3>

<p>What they are telling you in essence is that, someone could own a word
and nothing stops them from demanding money from you just to use it, it&rsquo;s
just that they still haven&rsquo;t found a way to justify that.</p>

<h3>Trade secrets And Patents</h3>

<p>Basically what trade secrets are for is that,
let&rsquo;s say a company like Intel is the only company
that is authorized to make the most used computer architecture (ISA)
meaning if anyone else, could somehow through the means of reverse engineering,
find a way to meaningfully manufacture the same computer architectures,
they would be sued to hell by Intel, because they own the patent for that
instruction set itself, so only they are allowed to create the CPUs,
on which the entire infrastructure of computing is based.
Meaning that if one day, Intel , for ANY reason, decided that it would
be a good idea to introduce a unit next to our CPUs that has kernel level
access to our computers, they could do so,and <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">they do</a>,
and no one would be able to
say a thing because we need them, because they are effectively embedded in
our infrastructure.
Now you tell me, doesn&rsquo;t it seem kind of malicious the way
all of these laws and terms are defined? It sure seems to me that
the definitions of terms like Trade Secretes and Patents and IP in general
can be easily used by major companies to seamlessly exploit us and there is
effectively nothing we can do about it, unless we somehow realize and fight
for the transformations of these laws and definitions themselves.</p>

<p>Veritas vos liberabit</p>
]]></description>
</item>
<item>
	<title> Paradoxical Desires</title>
	<link>https://xemadp.github.io/blog/entries/pdxdsrs.html</link>
	<pubDate>Sat, 17 Dec 2022 02:43:12 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-12-17 02:43:12 --->


<h1>Paradoxical Desires</h1>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/strength.jpg" alt="Strength"  style="width:100%;height:auto;max-width:400px" />
</p></p>

<p>It&rsquo;s weird, the desire or rather the need to be liked is part of our evolutionary
trait, almost like a warning from our mind wanting us to find someone sooner and
procreate, modern society however has many contrasts when compared to the early
societies homo-sapiens thrived in, resulting in behaviours and feelings that can
seem so strange you would have thought they&rsquo;re otherworldly. This is of course
considering no other organism except for mankind understands and acts upon these
sorts of feelings and mental deductions.</p>

<p>Sometimes these feelings can result in behaviour from man that could only be
considered paradoxical and obscure, making even the person committing that action
out of place and foolish.An abundance of regret and shame is released onto the
said fool, which could only be described as the feeling of failure towards the
previously mentioned &ldquo;evolutionary trait&rdquo;.</p>

<p>In some mystifying way however, it seems to work out, considering the fact that
failure and shame are of the motivators that you are doing something wrong that
will damage you in an evolutionary way, so you should improve yourself on it.</p>

<p>Meaning evolution has not only found a way to optimize us physically but also
mentally, resulting in self correcting behaviour that tries to guarantee our
survival in small societies by taking into account other members idea of us
in to consideration. Especially when it is people that have a huge impact on
your survival, being close friends, people you depend on materially and
procreation-wise.</p>

<h1>P.S:</h1>

<p>Haven&rsquo;t been active on my blog for a while now because of university classes
and other complicated stuff going on with me at the moment, wanted to
write a quick blog-post, just as a mind dump and also to update the blog.
Also there is a feeling telling me more people are gonna view this so,
to all possible new readers:
Hope you enjoy reading what is brought into being by my brain at 2:30 AM on a Friday :).</p>
]]></description>
</item>
<item>
	<title> Good Times, Bad Times, Hopeful Future</title>
	<link>https://xemadp.github.io/blog/entries/rev2.html</link>
	<pubDate>Mon, 31 Oct 2022 16:56:48 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-10-31 16:56:48 --->


<h1>Good Times, Bad Times, Hopeful Future</h1>

<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/punkisnotded.jpg" alt="Punk Is Not Ded, Persepolis"  style="width:100%;height:auto;max-width:900px" />
</p></p>

<p>The protests in Iran are ongoing, Exactly when I start feeling like the protest are dying out, partially because I have very
limited access to the Internet these days, and hence can&rsquo;t get any info on what&rsquo;s going on,
I hear news more infuriating, more indicating of the regimes last resorts.</p>

<hr>


<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/dieayatollah.jpg" alt="Die Ayatollah!"  style="width:100%;height:auto;max-width:400px" />
</p></p>

<p>I wrote the above paragraph about 20 days ago and left the rest as a draft, I planned on reporting(!) on stuff that has happened
in Iran since my last update, but so much is happening so fast, I couldn&rsquo;t report on all of it here.
I was also busy with university, new friends and my own experiences regarding civil disobedience.</p>

<p>Many people have died, including children with 12 years of age, killed by bullets fired by protest police
mind you, not because he got some sickness or was hit by a random drunk driver.
Too many teenagers and young adults lost their life in recent protests over their most simple rights,
Too many to count, and quite honestly it makes my blood boil.
<hr>
<p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/curbed.jpg" alt="Connection Failed!"  style="width:100%;height:auto;max-width:300px" />
</p>
<p align="center" style="line-height:0.9;font-size:12px">
Connection Failed!
</p></p>

<p>Internet Curbs are at their worst, It&rsquo;s not completely shut off, but it might as well be, I couldn&rsquo;t even reach
any Arch Linux mirrors to update my system. Twitter, Instagram, Telegram, Whatsapp, not accessible with regular Internet, they CAN be
opened if you use VPNs but almost no VPN works and we have to switch between them all the time. DuckDuckGo is not accessible
and Google has safe search on by default and you can&rsquo;t turn it off :/, I use Searx(or brave search sometimes) so I don&rsquo;t care
but, just for it to be recorded it here I want to talk about it. Firefox extensions are blocked, VSCode extensions are also
not accessible, Google play store, App store, Jetbrain&rsquo;s Website, Google Maps! And even games like call of duty and any other absurd thing
you can imagine to censor when a revolution is going on.</p>

<hr>


<p><img src="https://xemadp.github.io/blog/pics/zahedan1.jpg" alt=""  style="width:100%;height:auto;max-width:200px" />
<img src="https://xemadp.github.io/blog/pics/zahedan2.jpg" alt=""  style="width:100%;height:auto;max-width:200px" />
<img src="https://xemadp.github.io/blog/pics/zahedan3.jpg" alt=""  style="width:100%;height:auto;max-width:200px" /></p>

<p>The most innocent of the people that have been killed and brutally dealt with, are people from Zahedan, having 90 people die
in one day, even though they were just exiting a mosque on a Friday noon after typical Friday prayers. Allegedly,
Colonel Kouchakzai in Chabahar raped a 15 year old girl from Sistan &amp; Baluchestan. The colonel told the girl he had to inspect her body
and then raped and molested her, people having found this out were in shock and anger and came to the streets which resulted
in Islamic Republic Attacking them using military grade weaponry causing at least 96 people to die.</p>

<hr>


<p><p align="center" style="line-height:0.2">
<img src="https://xemadp.github.io/blog/pics/40days.jpg" alt="People Marching Towards Mahsa Amini's Grave"  style="width:100%;height:auto;max-width:360px" />
</p>
<p align="center" style="line-height:0.9;font-size:12px">
People Marching Towards Mahsa Amini&rsquo;s Grave
</p></p>

<p>About two days ago, mysteriously enough, &ldquo;A terrorist attack masterminded by ISIS&rdquo; took place, apparently it&rsquo;s super
easy to take an AK-47 and pass security in Shah-Cheragh(hint: It isn&rsquo;t), Now, I&rsquo;m no conspiracy theorist, but ISIS has denied the fact
that they orchestrated the attack and the regime has given us just enough evidence to put 2 and 2 together and deduce that
the entire terrorist attack was a ploy by the Islamic Republic to take everyone&rsquo;s mind off of the protests, which failed
miserably, considering the fact that in the very same day, thousands of people marched towards the cemetery where Mahsa Amini is buried to mourn her
death on the 40th day of her murder.</p>

<hr>


<p><p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/thestreetsarehers.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
<img src="https://xemadp.github.io/blog/pics/newgovernor.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
The Streets are hers(left), The new Governor of Mahabad(right)
</p></p>

<p>Meanwhile the streets are occupied by the people everyday the protests are decentralized and locally organized meaning
no central leader can be pointed to/arrested to weaken the movement, as a matter of fact the people are collectively
leading the battle in the streets and it it perhaps one of the most beautiful natural patterns I&rsquo;ve ever seen.
As it happens, with every new person the regime kills or puts into prison, more people join the movement,
it really does seem like the regime is out of moves and it&rsquo;s only choice is to keep killing and arresting people
they don&rsquo;t know what to do if that fails. Speaking of failures, people in the city of Mahabad came to the streets after
the regime&rsquo;s dogs killed a man for innocently protesting, the number of people who took to the streets was so much that
they actually managed to take over the governorate<em> and other important government buildings in Mahabad.
<hr>
<p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/uni2.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
<img src="https://xemadp.github.io/blog/pics/uni5.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
<img src="https://xemadp.github.io/blog/pics/uni4.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
A tale in 3 images: Basijis blocking the doors to the main dining hall(1), Students eating their food outside, men and women together(2), the same basijis</em> crying after seeing they couldn&rsquo;t seperate them(3)
</p></p>

<p>Universities resemble the heart of the civil disobedience going on in Iran right now, the generation attending university is and has
always been the face of defiance, activism and demanding rights. Needless to say university students in Iran are doing what any
university student in the world would do in this scenario, Chanting against the dictatorship, Disobeying the laws that are put
in place to segregate them and demanding the rights they have as humans and as Iranians. For example, the main dining halls in
Iranian universities are gendered(!) meaning men and women can&rsquo;t sit next to each other when dining, apparently that&rsquo;s not OK.
So what do you think we did? Exactly, we sat together in the main dining hall, not just in our university but in every university
in Iran, and showed them that they cannot segregate us based on such stupid Ideas. I can&rsquo;t help but remember when Rosa parks sat
in the non-black section of the bus, I&rsquo;m not saying the situation is as bad here, but opposing a gender apartheid is as great of
a move as opposing a race apartheid(IMO). Many university students have been suspended, many of them have been arrested and
now they&rsquo;ve started raiding dormitories and dragging students out and to the detention centers where they brutally interrogate
them and confiscate all of their electronics to inspect.
<p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/uni3.jpg" alt=""  style="width:100%;height:auto;max-width:260px" />
<img src="https://xemadp.github.io/blog/pics/uni1.jpg" alt=""  style="width:100%;height:auto;max-width:310px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
University students of Noshirvani Babol University holding hands in solidarity(left), Savage of a basiji shooting at students in Tehran North Azad University(right)
</p>
<hr>
<p align="center" style="line-height:0.1">
<img src="https://xemadp.github.io/blog/pics/jadi.jpg" alt=""  style="width:100%;height:auto;max-width:460px" />
</p>
<p align="center" style="line-height:1.1;font-size:12px">
Jadi has been in detention for over 27 days (by now : 31 Oct) without doing anything illegal
</p>
Nothing like this movement has ever been seen here in the Middle East, Let alone Iran, I feel like I was born in the Correct timeline and
somehow it&rsquo;s hard for me to believe the fact that this is happening, I hope all of this leads to a revolution and that I can live to
be free in Iran, having the same concerns as everyone living in a free country, no longer thinking about the ways I can game foreign
websites into letting me create an account sounds nice.(And so does not being in fear of my life lol)
Why do I write these blog posts you might ask? Well, It&rsquo;s not like I&rsquo;m a journalist or that I deliver particularly new information
it&rsquo;s just that I feel like It helps me cope with everything happening around me and also I can look back to these blog posts years from
now and tell myself (and everyone else) how I was feeling when these incidents were taking Place.
Having said all of that I left a lot of unsaid things, I didn&rsquo;t write about JADI or every other person the regime has locked up
wrongfully but I suppose I was able to convey my overall feeling. Living through what seems to be a revolution is sure weird
specially the part where you can&rsquo;t actually believe it&rsquo;s happening.</p>

<p><img src="https://xemadp.github.io/blog/pics/defiant.jpg" alt=""  style="width:100%;height:auto;max-width:245px" />
<img src="https://xemadp.github.io/blog/pics/freeiran.jpg" alt=""  style="width:100%;height:auto;max-width:360px" /></p>

<p style="line-height:1.1;font-size:12px">
 -- P.S + Glossary --
</p>


<hr>


<p style="line-height:1.1;font-size:10px">
P.S: I included "good times" in the title because despite every bad thing that is happening I find it to be good that the people of
Iran are taking their destiny into their own hands.
</p>


<p style="line-height:1.1;font-size:10px">
Basiji : A paramilitary volunteer militia established in Iran in 1979 by order of Ayatollah Khomeini, Today, the force consists of young Iranians who volunteer, often in exchange for official benefits. Basij serve as an auxiliary force engaged in activities such as internal security, enforcing state control over society.
</p>


<p style="line-height:1.1;font-size:10px">
Governorate: Arguably The most important government building of an Iranian city
</p>

]]></description>
</item>
<item>
	<title> About the Iranian Protests</title>
	<link>https://xemadp.github.io/blog/entries/revolution.html</link>
	<pubDate>Sun, 02 Oct 2022 22:19:28 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-10-02 22:19:28 --->


<h1>About the Iranian Protests</h1>

<p>Iranians are experiencing the biggest protests since the 2019 protests over oil prices,
this time though, something fundamental is different about the protests, It heavily
includes women.It started after a 22 year old woman called Mahsa Amini was killed by the &ldquo;Morality Police&rdquo;
here in Iran, It erupted into one of Iran&rsquo;s biggest protests in years, women
going out to the streets against compulsory hijab, burning their veils and chanting
in opposition to Iran&rsquo;s Morality Police. Another Important distinction is that
this time the protests don&rsquo;t necessarily include a single specific class, ethnicity or religious minority,
Every one is out in the streets every day, ( for the 15th consecutive day as of the time I&rsquo;m writing
this blog post ) The protests escalated quite quickly, They&rsquo;re really not about a reform of The Islamic Republic
people are straight up chanting against the current system of Iran and want to replace it, with a secular, democratic
system.</p>

<p>I say it&rsquo;s different because I&rsquo;ve never seen protests started over women&rsquo;s rights in the MIDDLE EAST
escalating to a straight up revolutionary movement against a religious theocracy. People all over
the world have heard the voice of Iranians, #MahsaAmini ( in Persian ) has been tweeted over 150 million
times on twitter and Iranians all around the world are going out and helping the Iranian people get their
voices heard by the International Community.</p>

<p>In Zahedan, A city in the Sistan And Baluchestan Province of Iran, people have started armed battles with Islamic Republic
armed forces. Many people have died in the recent protests, many of them teenagers, The Islamic Republic is
disconnecting the Internet, every day from 4PM to 1AM the Internet is practically non-existent. Many university
students have been taken to prisons. Iranian Artist Shervin Hajipour, made a song about the struggles of living under the
Islamic Republic and he was arrested, for singing a SONG that he uploaded to his PERSONAL PAGE on Instagram.
The Islamic Republic is desperate in Shutting the protests down but so far the protest are ongoing with no sign of
dying out and the IR keeps on making mistakes, arresting innocent people, which results in fueling the fire.</p>

<p>Because of the protest half of our classes are &ldquo;online&rdquo; but the internet is also gone so it&rsquo;s not the most ideal situation.
A lot of University Professors have gone on strike and a lot of students also refuse to take part in classes</p>

<p>I&rsquo;m writing this blog post in my dorm room with no access to internet, on Sunday, 2nd of October.</p>

<p>I hope for a future where stating the truth and
fighting for human rights is not considered a crime in my country.</p>

<p><img src="https://xemadp.github.io/blog/pics/rev1.jpg" alt=""  style="width:100%;height:auto;max-width:190px" />
<img src="https://xemadp.github.io/blog/pics/rev2.jpg" alt=""  style="width:100%;height:auto;max-width:190px" />
<img src="https://xemadp.github.io/blog/pics/tehran.jpg" alt=""  style="width:100%;height:auto;max-width:190px" /></p>
]]></description>
</item>
<item>
	<title> My university results are here!</title>
	<link>https://xemadp.github.io/blog/entries/uni.html</link>
	<pubDate>Sat, 01 Oct 2022 20:39:01 +0330</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-10-01 20:39:01 --->


<h1>My university results are here!</h1>

<p>Almost a Month ago I got my national university entrance exam results and I had to apply to
different universities of my choice, basically how it works is that: one applies to as many
universities(alongside their majors) and lists them in order of priority, it goes through the list
and stops when it finds a choice that you qualify for ( based on your results and how you rank nationally)
I applied to multiple computer science spots with Tehran&rsquo;s universities as priorities in mind, about
2 weeks ago I got my results and I got accepted in KNTU( Khaje Nasir al-din Toosi University of technology in Tehran )
I was busy with signing up and getting my dormitory permit sorted out.
Last Friday ( 30th of September 2022 ) I came here to Tehran to settle in
My dormitory room.</p>

<p><img src="https://xemadp.github.io/blog/pics/kntu.png" alt="" /></p>

<p>Dorm life was strange the first few days, but I feel like I&rsquo;m habituating quick enough.
Getting the hang of where everything is was the hard part, obviously moving in with
total strangers isn&rsquo;t the best experience at first, but fortunately my roommates are not
the crazy type, in the end it worked out well ( so far ).</p>

<p>I&rsquo;m looking forward to the university experience, I don&rsquo;t necessarily know what to expect though.
I have a lot of discrete mathematics, which is exciting because I like discrete mathematics.</p>

<p>University students are going on strikes all across the country, I&rsquo;m not going to any
classes this week.</p>
]]></description>
</item>
<item>
	<title> I got invited to create with DALLE2</title>
	<link>https://xemadp.github.io/blog/entries/Dalle2.html</link>
	<pubDate>Mon, 22 Aug 2022 04:49:49 +0430</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-08-22 04:49:49 --->


<h1>I got invited to create with DALLE2</h1>

<p>A couple of month ago when DALLE2 was exciting news I requested to join OpenAI&rsquo;s waitlist
to use DALLE2 ( This was of course before the low-tier dollar store variation of it became available to
everyone for free)</p>

<p>(not) <em>Surprisingly</em> OpenAI had to kill my vibe right off the bat by not letting me sign up using My Country&rsquo;s IP,
There&rsquo;s a workaround for that ( VPNS ) so I didn&rsquo;t care much until it asked me for my number for 2FA
That was a problem considering I didn&rsquo;t have A number from some foreign country so I ended up Asking a
friend Abroad to let me use his number and after all that fuss I was given permission to create with
DALLE2, <em>Only 50 prompts though!</em></p>

<p>I realized they had made a &ldquo;Credit&rdquo; system where each credit amounted to one prompt and after that you
could <em>buy new credit</em> or wait another month for 15 free credits! Yeah so that was a bit underwhelming&hellip;
But I didn&rsquo;t care much since 50 prompts were enough for my usage.</p>

<p>It took me a couple of tries to figure out exactly how to write prompts in order to produce outputs close to
what I had in mind. Afterwards it was pretty standard DALLE experience so I decided to share some of the images here. One of the variation of prompts that resulted in interesting creations was &ldquo;Ornate Persian
/Mughal/Ottoman Miniature depicting X&rdquo;</p>

<p><strong><em> Consider <a href=mailto:emad@emadp.xyz> emailing me </a> if you have any ideas for more creations or if you want high quality versions of images posted here. </em></strong></p>

<hr>




<p><p align="center" style="line-height:1.5">
<img src="https://xemadp.github.io/blog/pics/celldivision.png" alt=""  style="width:100%;height:auto;max-width:350px" />
<br>
Ornate Persian Miniature depicting Cell Division
</p></p>

<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/scream1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/scream2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p>
<p align="center" style="line-height:0.0001;margin:0px">
<img src="https://xemadp.github.io/blog/pics/scream3.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/scream4.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
<a href="https://en.wikipedia.com/wiki/The_Scream"> The Scream </a> Depicted as an ornate Persian miniature
</p>


<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/cyborg1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/cyborg2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p>
<p align="center" style="line-height:0.0001;margin:0px">
<img src="https://xemadp.github.io/blog/pics/cyborg3.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/cyborg4.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
Ornate Persian Miniature depicting a Persian Cyborg tinkerer with robotic limbs
</p>


<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/city1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/city2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p>
<p align="center" style="line-height:0.0001;margin:0px">
<img src="https://xemadp.github.io/blog/pics/city3.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/city4.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
Ornate Persian Miniature depicting A megacity with nuclear power plants  surrounded by big walls
</p>


<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/mcd1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/mcd2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/mcd3.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
Ornate Persian Miniature depicting a McDonalds sign
</p>


<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/doom1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/doom2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
MF DOOM performing on stage with a Cyborg Samurai
</p>


<hr>


<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/hacker1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/hacker2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<p align="center" style="line-height:1.2">
Old Persian Man as a hacker behind a computer, Artstation, Studio
</p>


<hr>


<p>I got some really unexpected results from a couple of prompts so  I&rsquo;m not even gonna write the prompts here, just let your imagination go wild with these ones:</p>

<p><p align="center" style="line-height:0;margin:5px">
<img src="https://xemadp.github.io/blog/pics/unknown1.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/unknown2.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p>
<p align="center" style="line-height:0.0001;margin:0px">
<img src="https://xemadp.github.io/blog/pics/unknown3.png" alt=""  style="width:100%;height:auto;max-width:300px" />
<img src="https://xemadp.github.io/blog/pics/unknown4.png" alt=""  style="width:100%;height:auto;max-width:300px" />
</p></p>

<hr>


<p>And that&rsquo;s the end of this blog post.</p>

<p>P.S: This was more like a collection of my DALLE2 creations
but I still felt like putting it in a blog post, sorry for the heavy webpage!</p>
]]></description>
</item>
<item>
	<title> My Experience Learning Spanish with Michel Thomas</title>
	<link>https://xemadp.github.io/blog/entries/Spanish.html</link>
	<pubDate>Thu, 21 Jul 2022 00:31:51 +0430</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-07-21 00:31:51 --->


<h1>My Experience Learning Spanish with Michel Thomas</h1>

<p>About 3 weeks ago I decided It would be a good idea to pick up learning a new language in
summer since I have a excess amount of time to spare.I wanted to learn a new language and decided
to go with Spanish since Spanish is quite similar to English (vocabulary-wise), and also I&rsquo;ve
always wanted to learn Latin so I figured It&rsquo;s a good step towards getting more familiar with
romance languages.</p>

<p><a href="https://en.wikipedia.com/wiki/Michel_Thomas">Michel Thomas</a> is a decorated WWII veteran who
developed his own language-teaching method, He kept this method a secret and only used it in
his own institute for the better part of his life, he believed that &ldquo;there are no bad students
only bad teachers&rdquo;. In early 2000s he decided to publish Educational Audio tracks on different
languages using his method.</p>

<p>His teaching method is strictly verbal and demands students not to write anything down
or take notes ( even mental notes!) he says that it&rsquo;s very important for students not to
try and &ldquo;remember&rdquo; taught material when they&rsquo;re not in class, Another requirement is that
the student must be &ldquo;relaxed&rdquo; and away from the sensation of &ldquo;being stressed to learn something&rdquo;</p>

<p>When I was looking around for material to learn Spanish, I had in mind the fact
that most language &ldquo;learning&rdquo; materials really don&rsquo;t teach you languages the way
they&rsquo;re supposed to be taught since native speakers learn languages mostly by listening
and communicating and there&rsquo;s really no hierarchical process when learning a language,
that is precisely how I learned English and My English skills seem to be way better than
that of my most peers.</p>

<p>Having that in mind I decided to give Michel Thomas tapes a chance, Although to be completely
honest At first it came across as a scam since the pdf file included along with the tapes kept
on promising unreal results and also boasted a lot about some mysterious learning method that
has been in the dark for the longest time and has educated lots and lots of Wealthy Actors and
Senators, but since the entire Spanish course was about 8 hours I decided to give it a try.</p>

<p><img src="https://xemadp.github.io/blog/pics/waltespanol.jpg" alt=""  style="width:100%;height:auto;max-width:720px" /></p>

<p>And I was so wrong about my conception of what <em>The Michel Thomas Experience™</em> was going to be
like. The tapes are basically Michel Thomas, and two students in a room together. Michel teaches
something basic and asks the students to use it in a sentence for example he would say: &ldquo; Tengo means I have, Lo means it, Lo tengo means I have it and Los means them, So what would I have them be?&rdquo;
and the students will try and come up with the proper Spanish Sentence. And That&rsquo;s basically how
the entire course is. He gives the students a good grasp on how the language really works and
wants them to come up with the sentences themselves, he never really gives the student the complete
sentence, they have to come up with it themselves.</p>

<p>One enjoyable thing about Michel is that he knows exactly the extend of what he has taught his
students, he might mention something once and proceed and then he will ask about it 4 hours
Later(in the course).</p>

<p>I&rsquo;ve been listening to about 5 or 6 tapes everyday for the past 3 weeks and I feel Like I have
a good understanding of how sentences are constructed in Spanish and I can put sentences together
as If I &ldquo;Know&rdquo; how to speak Spanish, and that&rsquo;s exactly how you want to feel, I see a lot of people
who claim they are &ldquo;learning&rdquo; a language but very clearly seem to be translating when they attempt
to put words together which is a major SIN!</p>

<p>Anyways I recommend you look at the Michel Thomas Tapes if you ever want to learn a new language
although I&rsquo;ve heard the courses in which Michel Thomas is not present differ majorly from his way
of teaching even though I haven&rsquo;t listened to them myself I don&rsquo;t recommend you getting them since
it&rsquo;s not really the Michel Thomas Method.</p>
]]></description>
</item>
<item>
	<title> Compiling NetHack from source</title>
	<link>https://xemadp.github.io/blog/entries/nethack.html</link>
	<pubDate>Sun, 01 May 2022 21:04:33 +0430</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-05-01 21:04:33 --->


<h1>Compiling NetHack from source</h1>

<p>I was trying to install nethack from the Arch repo and for some weird reason the ownership of /var/games/nethack/record and /var/games/nethack/perm were messed with and the game couldn&rsquo;t modify them.
I tried:</p>

<p><pre><code class="shell">sudo chmod 666 /var/games/nethack/record
sudo chmod 666 /var/games/nethack/perm
</code></pre>
But that didn&rsquo;t change anything so I decided to just compile from source.
The NetHack wiki has a <a href="https://nethackwiki.com/wiki/compiling">page on compiling</a> but The directions are not really clear and also there is instructions for all OS&rsquo;s there. So I decided to write a quick blog post describing how to compile the original NetHack on a Linux system.
Make sure you have base-devel, a c compiler, libraries and development headers available(you should have most libraries by default).
It&rsquo;s pretty straight forward from here on out:</p>

<p><pre><code class="shell">git clone https://github.com/NetHack/NetHack
cd NetHack
sys/unix/setup.sh sys/unix/hints/linux.370
make fetch-lua &amp;&amp; make fetch-lua
make &amp;&amp; make install
</code></pre>
It will install NetHack to ~/nh/install/games/nethack . You can just add it to your path and enjoy good old NetHack!</p>

<p><img src="https://xemadp.github.io/blog/pics/nethack.png" alt=""  style="width:100%;height:auto;max-width:1100px" /></p>
]]></description>
</item>
<item>
	<title> How I got into GNU/Linux</title>
	<link>https://xemadp.github.io/blog/entries/linuxjourney.html</link>
	<pubDate>Wed, 20 Apr 2022 17:25:40 +0430</pubDate>
	<description><![CDATA[
<!---Generated by esbu--->


<!---the creation date is: 2022-04-20 17:25:40 --->


<h1>How I got into GNU/Linux</h1>

<hr>


<h3>The beginning</h3>

<p>I don&rsquo;t exactly remember the date I first heard of a linux distro, It must&rsquo;ve been in 2014~ish because I remember getting a cd-pack of ubuntu+kubuntu, bringing it home and installing it.
Now, At the time I was very young and didn&rsquo;t know anything about Operating Systems.one of My uncles taught me the basic concept of Operating systems and that sparked me to try out diffrent operating systems because the idea of more Operating Systems existing was quite exciting to me.Although I was excited, I was quite young and so I Ended up not understanding anything and going back to Windows.</p>

<p><img src="https://xemadp.github.io/blog/pics/ubuntu1.jpg" alt=""  style="width:100%;height:auto;max-width:640px" />
<img src="https://xemadp.github.io/blog/pics/ubuntu2.jpg" alt=""  style="width:100%;height:auto;max-width:240px" /></p>

<p>Fast forward a couple of years later in January 2019, I had gotten more into programming and read a lot about the GNU project and I decided to give it another shot.
This time I downloaded The Linux Mint ISO and booted it onto a flash drive and installed it properly.I used Mint for about 6 month and at times I would feel frustrated because of the dependance I had to Windows.It would be hard to do things in GNU/Linux But at the same time it felt very liberating in the sense that it required me to only learn the basics of the system, for it to be much more elegant and faster than Windows and what it could ever offer, I Immediately made up my mind about using Linux and never going back to Windows ever again.
This was ofcource before I learned the True power of Linux, The Terminal.After searching online for guides on how to do things in linux one can almost always find their way back to the terminal, and so was this my experience.At first I was quite reluctant on going near it,always looking for a gui solution. at around this time I decided to Try more Distros and started distro-hopping.I went from Mint to Ubuntu to Pop!_Os to Manjaro and Finally settled for a while.Manjaro, being an arch-basd distrobution, required a lot of fidgeting to get some programs to work correctly, at the same time the existence of AUR helped a lot with the experience.Manjaro was when I really found my way around the terminal and how to use diffrent terminal commands and write shell scripts which sparked an even bigger excitement in me,I have always been fascinated with technology that is very diferrent and weird,And to the novice me, different and weird it was.</p>

<h3>Down the rabbithole</h3>

<p><img src="https://xemadp.github.io/blog/pics/spiral.jpg" alt=""  style="width:100%;height:auto;max-width:350px" /></p>

<p><em>Sliding Down The Rabbit Hole</em></p>

<p>The journey to GNU/Linux is a lot like sliding down a rabbit hole and everyone whos approached linux would agree.First you&rsquo;re fiddling around with a new Operating System and Then when you come to your senses you find yourself spending 5 hours to automate a task that could&rsquo;ve been done in 10 minutes if you did it manually.And the deeper you venture into this rabbithole the harder it becomes to come back,At this Point in time I started almost completely switching to the terminal and Also started learning vim.After you wrap your head around vim or emacs, using a what-you-see-is-what-you-get editor just becomes painful and triggering to a certain extent.I also had my music player,rss feed reader,email client and file manager in the terminal and it was becoming more and more apparent that I have to start using a Window manager instead of a full-fledged Desktop Environment, And so I chose i3.The switch from Xfce to i3 was rough, being on Manjaro a lot of the config kept breaking and I had to use lightdm which was pre-configured and wouldn&rsquo;t load i3 for some reason.So I decided to change to bspwm,that also felt quite bloaty on Manjaro with a preconfigured Xfce environment, so I finally decided I&rsquo;m gonna Switch to Arch Linux! This was in July 2020.</p>

<h3>Arch</h3>

<p><img src="https://xemadp.github.io/blog/pics/arch.jpg" alt=""  style="width:100%;height:auto;max-width:400px" /></p>

<p><em>In Case You Were Wondering</em></p>

<p>Installing arch linux was One of the harder obstacles I hit in my Linux  journey, but it was also very satisfying when I got it right.I found out that the best way to truly learn about something is the wiki/man pages and honestly there no one out there that can explain something better that the manuals.Bspwm on Arch was a succuss and I kept falling deeper in the rabbithole.I stuck with arch for pretty much until now and have had no problems what so ever. I did reinstall arch once and that was because I had to install windows to rescue my Locked ntfs partition.Arch has been stable for quite a while and I don&rsquo;t intend on distro-hopping anytime soon, I tried installing gentoo on virtual machine but quite honestly I think it was too much effort for me, for now atleast, I will probabaly try it out in the future.</p>

<p><img src="https://xemadp.github.io/blog/pics/arch-bspwm.png" alt=""  style="width:100%;height:auto;max-width:500px" /></p>

<p><em>Bspwm on my Arch Install</em></p>

<h3>Suckless philosophy</h3>

<p>With Arch Came the philosophy of simple and bloat-less software.That&rsquo;s how I started getting my feet wet with suckless software.It started with ST being the terminal and then Dmenu, after that I was using sxiv(Which is not part of the suckless project but still a pretty suckless program to view images) and then once I had gathered All the courage I could, I decided to leave behind Bspwm and start trying out dwm.And so I did.Dwm is now so different compared to bspwm,the only New thing would be that I need to change config.h and apply a couple of patches.I also stopped using lightdm and any other display managers.I maintain my own build of <a href="https://github.com/xemadp/dwm">Dwm</a>.I still haven&rsquo;t made my mind up about my ST build.For now farsi text seems to not be shaped correctly in st even though it is using HarfBuzz for shaping I&rsquo;ve tried more than a dozen fonts but to no avail.Some other terminals were better at this though, so I know it&rsquo;s possible and untill I figure that Out I&rsquo;m not thinking about maintaining my build of st on my github.</p>

<p><img src="https://xemadp.github.io/blog/pics/arch-dwm.png" alt=""  style="width:100%;height:auto;max-width:500px" /></p>

<p><em>My build of Dwm on Arch</em></p>

<p>You could say I fell for every meme in the Gnu/Linux community,But as I said: the deeper I go into this rabbithole the harder It becomes to look back,I don&rsquo;t think I&rsquo;m gonna go back to a Desktop Environment or any other Windeow manager. At this point,I&rsquo;m pretty satisfied with my setup.
In order to get this blog up and running I wrote my own wrapper called &ldquo;avst&rdquo;,It takes a number of markdown files as entries and makes a static website with a blog, about page and others,I started this projects about 24 hours ago and so It needs a lot of polishing before publishing it on github,And so this is where I am right now,I will definitely write more about my setup and diffrenet programs and/or projects I hear About so feel free to subscribe to my blog with this <a href="https://www.emadp.xyz/rss.xml">RSS Feed</a> <img src="https://xemadp.github.io/blog/pics/rss.jpg" alt=""  style="width:100%;height:auto;max-width:28px" /></p>

<h4>Side note:</h4>

<p>This was my first blog post ever, so if I was a bit all over the place, I apologize.I wrote this partialy to test avst which is my own wrapper that generates my blog.I hope you enjoyed this. I&rsquo;ll try to write about more interesting stuff,and I&rsquo;ll use this blog for an outlet of sorts.</p>
]]></description>
</item>
</channel>
</rss>
